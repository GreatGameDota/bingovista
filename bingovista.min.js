const e=[{img:"bingoicons_mod.png",txt:"bingoicons_mod.txt",canv:void 0,frames:{}},{img:"uispritesmsc.png",txt:"uispritesmsc.txt",canv:void 0,frames:{}},{img:"uiSprites.png",txt:"uiSprites.txt",canv:void 0,frames:{}}],t={width:85,height:85,margin:4,border:2,color:"#ffffff",background:"#020204",font:'600 10pt "Segoe UI", sans-serif'},r=3e4,o=250,n=1,a=9,i=21,l=3;var s,c,g="https://noblecat57.github.io/map.html",m=!1;function setHeaderFromBoard(e){for(var t=document.getElementById("hdrttl");t.childNodes.length;)t.removeChild(t.childNodes[0]);for(t.appendChild(document.createTextNode(e.comments)),t=document.getElementById("hdrsize");t.childNodes.length;)t.removeChild(t.childNodes[0]);for(t.appendChild(document.createTextNode(String(e.width)+" x "+String(e.height))),t=document.getElementById("hdrchar");t.childNodes.length;)t.removeChild(t.childNodes[0]);for(t.appendChild(document.createTextNode(e.character||"Any")),t=document.getElementById("hdrshel");t.childNodes.length;)t.removeChild(t.childNodes[0]);t.appendChild(document.createTextNode(e.shelter||"random")),function perksToChecksList(e){var t=document.getElementById("hdrperks");for(;t.childNodes.length;)t.removeChild(t.childNodes[0]);for(var r=Object.keys(J),o=0;o<r.length;o++){var n=document.createElement("label"),a=document.createElement("input");a.setAttribute("type","checkbox"),a.setAttribute("id","perkscheck"+String(o)),e&J[r[o]]&&a.setAttribute("checked",""),n.appendChild(a),n.appendChild(document.createTextNode(j[r[o]])),t.appendChild(n)}}(e.perks),function addModsToHeader(e){var t=document.getElementById("hdrmods");for(;t.childNodes.length;)t.removeChild(t.childNodes[0]);if(!e.length)return void t.appendChild(document.createTextNode("none"));var r=document.createElement("td"),o=document.createElement("tr"),n=document.createElement("table");r.appendChild(document.createTextNode("Number")),o.appendChild(r),(r=document.createElement("td")).appendChild(document.createTextNode("Hash")),o.appendChild(r),(r=document.createElement("td")).appendChild(document.createTextNode("Name")),o.appendChild(r),n.appendChild(o),t.appendChild(n);for(var a=0;a<e.length;a++)o=document.createElement("tr"),n.appendChild(o),(r=document.createElement("td")).appendChild(document.createTextNode(String(a))),r.style.textAlign="center",o.appendChild(r),(r=document.createElement("td")).appendChild(document.createTextNode(e[a].hash)),o.appendChild(r),(r=document.createElement("td")).appendChild(document.createTextNode(e[a].name)),o.appendChild(r)}(e.mods)}function toggleKibs(e){m=!!document.getElementById("kibitzing").checked,void 0!==c&&selectSquare(c.col,c.row)}function dragDrop(e){e.preventDefault(),this.style.backgroundColor="";var t=e.dataTransfer;if(setError(""),t.types.includes("Files"))doLoadFile(t.files);else{for(var r=0;r<t.items.length;r++)if(t.items[r].type.match("^text/plain"))return void t.items[r].getAsString((function(e){document.getElementById("textbox").value=e,parseText()}));setError("Please drop a text file.")}}function setError(e){for(var t=document.getElementById("errorbox");t.childNodes.length;)t.removeChild(t.childNodes[0]);t.appendChild(document.createTextNode(e))}function doLoadFile(e){for(var t=0;t<e.length;t++)if(e[t].type.match("^text/plain")){var r=new FileReader;return r.onload=function(){document.getElementById("textbox").value=this.result,parseText()},r.onerror=function(e){setError("File read error: "+e.message)},void r.readAsText(e[t])}setError("Please select a text file.")}function parseText(e){var r=document.getElementById("textbox").value;r=r.trim().replace(/\s*bChG\s*/g,"bChG"),document.getElementById("textbox").value=r;var o=r.split(/bChG/),l=Math.ceil(Math.sqrt(o.length));if(void 0===s)s={comments:"Untitled",character:"Any",perks:0,shelter:"",mods:[],size:l,width:l,height:l,goals:[],toBin:void 0};else{null!==document.getElementById("hdrttl")&&(s.comments=document.getElementById("hdrttl").innerText||"Untitled"),null!==document.getElementById("hdrchar")&&(s.character=document.getElementById("hdrchar").innerText),null!==document.getElementById("hdrshel")&&(s.shelter=document.getElementById("hdrshel").innerText,"random"===s.shelter&&(s.shelter=""));for(var g,m=0;m<Object.values(J).length&&null!==(g=document.getElementById("perkscheck"+String(m)));m++)g.checked?s.perks|=Object.values(J)[m]:s.perks&=~Object.values(J)[m];s.goals=[],s.size=l,s.width=l,s.height=l}0==o[0].search(/[A-Za-z]{1,12}[_;]/)?(o[0].indexOf(";")>0?(s.version="0.90",s.character=o[0].substring(0,o[0].indexOf(";")),o[0]=o[0].substring(o[0].indexOf(";")+1)):o[0].indexOf("_")>0&&(s.version="0.86",s.character=o[0].substring(0,o[0].indexOf("_")),o[0]=o[0].substring(o[0].indexOf("_")+1)),s.character=K[s.character]||"Any"):s.version="0.85";for(m=0;m<o.length;m++){var h,p;if(o[m].search("~")>0&&o[m].search("><")>0)if([h,p]=o[m].split("~"),p=p.split(/></),"BingoMoonCloak"===h&&(h="BingoMoonCloakChallenge"),void 0!==u[h])try{s.goals.push(u[h](p))}catch(e){s.goals.push(u.BingoChallenge(["Error: "+e.message+"; descriptor: "+p.join("><")]))}else s.goals.push(u.BingoChallenge(["Error: unknown type: ["+h+","+p.join(",")+"]"]));else s.goals.push(u.BingoChallenge(["Error extracting goal: "+o[m]]))}0==o.length&&s.goals.push(u.BingoChallenge("blank")),void 0!==c&&(c.row<s.height&&c.col<s.width?selectSquare(c.col,c.row):c=void 0),void 0===c&&selectSquare(-1,-1);var d=document.getElementById("board");t.margin=Math.max(2*Math.round(2*(d.width+d.height)/(91*(s.width+s.height))),2),t.width=Math.round(d.width/s.width-t.margin-t.border),t.height=Math.round(d.height/s.height-t.margin-t.border);var y=document.getElementById("board").getContext("2d");y.fillStyle=t.background,y.fillRect(0,0,y.canvas.width,y.canvas.height);for(m=0;m<s.goals.length;m++)drawSquare(y,s.goals[m],Math.floor(m/s.height)*(t.width+t.margin+t.border)+(t.border+t.margin)/2,m%s.height*(t.height+t.margin+t.border)+(t.border+t.margin)/2,t);setHeaderFromBoard(s),s.toBin=function boardToBin(e){var t=new TextEncoder,r=new Uint8Array(i),o=t.encode(e.comments+"\0"),l=t.encode(e.shelter+"\0"),s=modsToArray(e.mods);applyLong(r,0,1765963602),r[4]=n,r[5]=a,r[6]=e.width,r[7]=e.height,r[8]=Object.values(K).indexOf(e.character)+1,applyShort(r,9,r.length+o.length),applyLong(r,11,e.perks),applyShort(r,15,r.length+o.length+l.length+s.length),applyShort(r,17,s.length>0?r.length+o.length+l.length:0),applyShort(r,19,0);for(var c=0,g=0;g<e.goals.length;g++)c+=e.goals[g].toBin.length;c+=r.length+o.length+l.length+s.length,c=3*Math.ceil(c/3);var m=new Uint8Array(c),u=0;m.set(r,u),u+=r.length,m.set(o,u),u+=o.length,m.set(l,u),u+=l.length,m.set(s,u),u+=s.length;for(g=0;g<e.goals.length;g++)m.set(e.goals[g].toBin,u),u+=e.goals[g].toBin.length;return m;function modsToArray(e){for(var t=[],r=(new TextEncoder,0);r<e.length;r++);return new Uint8Array(t)}}(s),r=function binToBase64u(e){var t=btoa(String.fromCharCode.apply(null,e));return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"*")}(s.toBin);var S=new URL(document.URL);S.searchParams.set("b",r),history.pushState(null,"",S.href),void 0!==c&&selectSquare(c.col,c.row)}function pasteText(e){setTimeout(parseText,10)}function copyText(e){navigator.clipboard.writeText(document.getElementById("textbox").value),setError("Text copied to clipboard.")}function clickShowPerks(e){var t=document.getElementById("hdrperks");"none"===t.style.display?t.style.display="initial":t.style.display="none"}function clickBoard(e){if(void 0!==s){var r=document.getElementById("boardcontainer").getBoundingClientRect(),o=Math.floor(e.clientX-Math.round(r.left))-(t.border+t.margin)/2,n=Math.floor(e.clientY-Math.round(r.top))-(t.border+t.margin)/2,a=t.width+t.margin+t.border,i=t.height+t.margin+t.border,l=Math.floor(o/a),c=Math.floor(n/i);o>=0&&n>=0&&o%a<a-t.margin&&n%i<i-t.margin?selectSquare(l,c):selectSquare(-1,-1)}}function selectSquare(e,r){var o=document.getElementById("desctxt"),n=document.getElementById("square").getContext("2d");if(r<0||e<0||r>=s.height||e>=s.width)clearDescription();else{var a=s.goals[r+e*s.height];if(void 0!==a){c={row:r,col:e},n.fillStyle=t.background,n.fillRect(0,0,n.canvas.width,n.canvas.height);var i={};for(Object.assign(i,t),i.margin=4,i.width=n.canvas.width-i.margin-i.border,i.height=n.canvas.height-i.margin-i.border,drawSquare(n,a,(i.border+i.margin)/2,(i.border+i.margin)/2,i);o.childNodes.length;)o.removeChild(o.childNodes[0]);var l=document.createElement("div");l.setAttribute("class","descch"),l.appendChild(document.createTextNode("Challenge: "+a.category)),o.appendChild(l),(l=document.createElement("div")).setAttribute("class","descdesc"),"BingoChallenge"===a.name?l.appendChild(document.createTextNode(a.description)):l.innerHTML=a.description,o.appendChild(l),(l=document.createElement("table")).setAttribute("class","desclist");var g=document.createElement("thead"),u=document.createElement("tr"),h=document.createElement("td");h.appendChild(document.createTextNode("Parameter")),u.appendChild(h),(h=document.createElement("td")).appendChild(document.createTextNode("Value")),u.appendChild(h),g.appendChild(u),g=document.createElement("tbody");for(var p=0;p<a.items.length&&p<a.values.length;p++)a.items[p].length>0&&(u=document.createElement("tr"),(h=document.createElement("td")).appendChild(document.createTextNode(a.items[p])),u.appendChild(h),(h=document.createElement("td")).appendChild(document.createTextNode(a.values[p])),h.style.wordWrap="anywhere",u.appendChild(h),g.appendChild(u));l.appendChild(g),o.appendChild(l),m&&a.comments.length>0&&((l=document.createElement("div")).setAttribute("class","desccomm"),l.innerHTML=a.comments,o.appendChild(l));var d=document.getElementById("cursor").style;return d.width=String(t.width+t.border-4)+"px",d.height=String(t.height+t.border-4)+"px",d.left=String(t.margin/2-0+e*(t.width+t.margin+t.border))+"px",d.top=String(t.margin/2-0+r*(t.height+t.margin+t.border))+"px",void(d.display="initial")}clearDescription()}function clearDescription(){for(c=void 0,n.fillStyle=t.background,n.fillRect(0,0,n.canvas.width,n.canvas.height);o.childNodes.length;)o.removeChild(o.childNodes[0]);o.appendChild(document.createTextNode("Select a square to view details.")),document.getElementById("cursor").style.display="none"}}function navSquares(e){if(void 0!==s&&["board","boardcontainer","cursor"].includes(e.target.id)){var t=0,r=0;if("Up"!==e.key&&"ArrowUp"!==e.key||(t=-1),"Down"!==e.key&&"ArrowDown"!==e.key||(t=1),"Left"!==e.key&&"ArrowLeft"!==e.key||(r=-1),"Right"!==e.key&&"ArrowRight"!==e.key||(r=1),t||r){e.preventDefault();var o=0,n=0;void 0!==c&&(o=c.col,n=c.row),o+=r,(n+=t)<0&&(n+=s.height),n>=s.height&&(n-=s.height),o<0&&(o+=s.width),o>=s.width&&(o-=s.width),selectSquare(o,n)}}}function drawSquare(e,t,r,o,n){e.beginPath(),e.strokeStyle=n.color,e.lineWidth=n.border,e.lineCap="butt",e.moveTo(r,o),e.lineTo(r+n.width,o),e.moveTo(r+n.width,o),e.lineTo(r+n.width,o+n.height),e.moveTo(r+n.width,o+n.height),e.lineTo(r,o+n.height),e.moveTo(r,o+n.height),e.lineTo(r,o),e.stroke(),e.imageSmoothingEnabled="false";for(var a,i,l=[],s=[],c=0;c<t.paint.length;c++)"break"===t.paint[c].type?(l.push(s),s=[]):s.push(t.paint[c]);s.length&&l.push(s),e.font=n.font,e.textAlign="center",e.textBaseline="middle";for(c=0;c<l.length;c++){i=2==l.length?o+n.border/2+(n.height-n.border)*(c+1)/(l.length+1):o+n.border/2+(n.height-n.border)*(c+.5)/l.length,i=Math.round(i);for(var g=0;g<l[c].length;g++)a=2==l[c].length?r+n.border/2+(n.width-n.border)*(g+1)/(l[c].length+1):r+n.border/2+(n.width-n.border)*(g+.5)/l[c].length,a=Math.round(a),"icon"===l[c][g].type?(void 0!==l[c][g].background&&"icon"===l[c][g].background.type&&drawIcon(e,l[c][g].background.value,a,i,l[c][g].background.color,l[c][g].background.scale,l[c][g].background.rotation),drawIcon(e,l[c][g].value,a,i,l[c][g].color,l[c][g].scale,l[c][g].rotation)):"text"===l[c][g].type?(e.fillStyle=l[c][g].color,e.fillText(l[c][g].value,a,i)):drawIcon(e,"Futile_White",a,i,colorFloatToString(D.Unity_white),l[c][g].scale||1,l[c][g].rotation||0)}}function drawIcon(t,r,o,n,a,i,l){var s,c;if(t.translate(o,n),t.rotate(l*Math.PI/180),t.scale(i,i),void 0===r)t.fillStyle=a,t.fillRect(-8,-8,16,16);else{for(var g=0;g<e.length&&(s=e[g].frames[r+".png"],c=e[g].canv,void 0===s);g++);if(void 0===s)t.fillStyle=a,t.fillRect(-8,-8,16,16);else{var m=document.createElement("canvas");m.width=s.frame.w,m.height=s.frame.h;var u=m.getContext("2d");u.globalCompositeOperation="source-over",u.clearRect(0,0,s.frame.w,s.frame.h),u.drawImage(c,s.frame.x,s.frame.y,s.frame.w,s.frame.h,0,0,s.frame.w,s.frame.h),u.globalCompositeOperation="multiply",u.fillStyle=a,u.fillRect(0,0,s.frame.w,s.frame.h),u.globalCompositeOperation="destination-in",u.drawImage(c,s.frame.x,s.frame.y,s.frame.w,s.frame.h,0,0,s.frame.w,s.frame.h),t.imageSmoothingEnabled=!1,t.drawImage(m,0,0,s.frame.w,s.frame.h,Math.round(-s.frame.w/2),Math.round(-s.frame.h/2),s.frame.w,s.frame.h)}}t.setTransform(1,0,0,1,0,0)}function binToString(e){if(e.length<i)throw new TypeError("binToString: insufficient data, found "+String(e.length)+", expected: "+String(i)+" bytes");if(1765963602!=readLong(e,0))throw new TypeError("binToString: unknown magic number: 0x"+readLong(e,0).toString(16)+", expected: 0x69427752");var t={comments:"Untitled",character:"Any",perks:0,shelter:"",mods:[],size:e[6],width:e[6],height:e[7],text:"",goals:[],toBin:e},r=new TextDecoder;(e[4]<<8)+e[5]>(n<<8)+a&&setError("Warning: board version "+String(e[4])+"."+String(e[5])+" is newer than viewer v"+String(n)+"."+String(a)+"; some goals or features may be unsupported."),t.character=0==e[8]?"Any":Object.values(K)[e[8]-1],t.text+=0==e[8]?"Any":Object.keys(K)[e[8]-1],t.text+=";";var o,s=readShort(e,9);if(s>0){if(s>=e.length)throw new TypeError("binToString: shelter pointer 0x"+s.toString(16)+" out of bounds");if(e.indexOf(0,s)<0)throw new TypeError("binToString: shelter missing terminator");t.shelter=r.decode(e.subarray(s,e.indexOf(0,s)))}if(t.perks=readLong(e,11),(s=readShort(e,17))>0){if(s>=e.length)throw new TypeError("binToString: mods pointer 0x"+s.toString(16)+" out of bounds");t.mods=[]}if(0!=readShort(e,19))throw new TypeError("binToString: reserved: 0x"+readShort(e,19).toString(16)+", expected: 0x0");if(e.indexOf(0,i)<0)throw new TypeError("binToString: comments missing terminator");if(t.comments=r.decode(e.subarray(i,e.indexOf(0,i))),0==(s=readShort(e,15))||s>=e.length)throw new TypeError("binToString: goals pointer 0x"+s.toString(16)+" out of bounds");for(var c=0;c<t.width*t.height&&s<e.length;c++){try{o=binGoalToText(e.subarray(s,s+e[s+2]+l))}catch(e){o="BingoChallenge~Error: "+e.message+"><"}s+=l+e[s+2],t.text+=o+"bChG"}return t.text=t.text.replace(/bChG$/,""),t}function binGoalToText(e){var t,r,o,n,a,i,s,c,g,m=new TextDecoder;if(e[0]>=$.length)throw new TypeError("binGoalToText: unknown challenge type "+String(e[0]));for(t=$[e[0]].desc,r=$[e[0]].params,o=0;o<r.length;o++){if(i=!1,"number"===r[o].type)for(a=[0],n=0;n<r[o].size;n++)a[0]+=e[l+r[o].offset+n]*(1<<8*n);else"bool"===r[o].type?(a=[e[1+r[o].offset]>>r[o].bit&1],""!==r[o].formatter&&a[0]++):"string"===r[o].type?(i=!0,0==r[o].size?-1==(s=e.indexOf(0,l+r[o].offset))&&(s=e.length):s=r[o].size+l+r[o].offset,a=e.subarray(l+r[o].offset,s)):"pstr"===r[o].type&&(i=!0,0==r[o].size?-1==(s=e.indexOf(0,l+e[r[o].offset+l]))&&(s=e.length):s=r[o].size+l+e[r[o].offset+l],a=e.subarray(l+e[r[o].offset+l],s));if(i&&""===r[o].formatter)c=m.decode(a);else if(i||""!==r[o].formatter){if(void 0===Y[r[o].formatter])throw new TypeError('binGoalToText: formatter "'+r[o].formatter+'" not found');for(g=[],n=0;n<a.length;n++){if(void 0===Y[r[o].formatter][a[n]-1])throw new TypeError('binGoalToText: formatter "'+r[o].formatter+'", value out of range: '+String(a[n]));g.push(Y[r[o].formatter][a[n]-1])}c=g.join(r[o].joiner||"")}else c=String(a[0]);t=t.replace(RegExp("\\{"+String(o)+"\\}","g"),c)}return t=(ChallengeUpgrades[$[e[0]].name]||$[e[0]].name)+"~"+t}document.addEventListener("DOMContentLoaded",(function(){t.color=colorFloatToString(D.Unity_white),document.getElementById("hdrshow").addEventListener("click",clickShowPerks),document.getElementById("clear").addEventListener("click",(function(e){document.getElementById("textbox").value="";var t=new URL(document.URL);t.search="",history.pushState(null,"",t.href)})),document.getElementById("parse").addEventListener("click",parseText),document.getElementById("copy").addEventListener("click",copyText),document.getElementById("hdrshow").addEventListener("click",clickShowPerks),document.getElementById("textbox").addEventListener("paste",pasteText),document.getElementById("boardcontainer").addEventListener("click",clickBoard),document.getElementById("boardcontainer").addEventListener("keydown",navSquares),document.getElementById("fileload").addEventListener("change",(function(){doLoadFile(this.files)})),document.getElementById("kibitzing").addEventListener("input",toggleKibs);var r=document.getElementById("droptarget");function dragEnterOver(e){(e.dataTransfer.types.includes("text/plain")||e.dataTransfer.types.includes("Files"))&&(e.preventDefault(),this.style.backgroundColor="#686868")}function loadImage(e,t){return new Promise((function(r,o){var n=document.createElement("img");n.addEventListener("load",(function(){var e=document.createElement("canvas");e.width=n.naturalWidth,e.height=n.naturalHeight,e.getContext("2d").drawImage(n,0,0),t.canv=e,r()})),n.crossOrigin="anonymous",n.addEventListener("error",(()=>o({message:"Error loading image "+e+"."}))),n.src=e}))}function loadJson(e,t){return fetch(e).then((function(e,t){return e.ok?e.text():t(new NetworkError("URL "+e.url+" error "+e.status+" "+e.statusText+"."))})).catch((e=>Promise.reject(e))).then((e=>{t.frames=JSON.parse(e).frames}))}function loadClosure(e,t,r){return r(e,t)}r.addEventListener("dragenter",dragEnterOver),r.addEventListener("dragover",dragEnterOver),r.addEventListener("dragleave",(function(e){this.style.backgroundColor=""})),r.addEventListener("drop",dragDrop);for(var o=[],n=0;n<e.length;n++)o.push(loadClosure(e[n].img,e[n],loadImage));for(n=0;n<e.length;n++)o.push(loadClosure(e[n].txt,e[n],loadJson));Promise.all(o).catch((function(e){console.log("Promise.all(): failed to complete fetches. Error: "+e.message)})).finally((function(){var e=new URL(document.URL).searchParams;if(e.has("a"))document.getElementById("textbox").value=e.get("a");else if(e.has("b")){try{var t=function base64uToBin(e){return e=e.replace(/-/g,"+").replace(/_/g,"/").replace(/\*/g,"="),new Uint8Array(atob(e).split("").map((e=>e.charCodeAt(0))))}(e.get("b"));setHeaderFromBoard(s=binToString(t))}catch(e){setError("Error parsing URL: "+e.message)}document.getElementById("textbox").value=s.text,parseText()}else if(e.has("q")){var r=e.get("q");if(!function validateQuery(e){if(e.length<4||e.length>13)return!1;for(var t=0;t<e.length;t++){var r=e.charCodeAt(t);if(r<"0".charCodeAt(0)||r>"z".charCodeAt(0)||r>"9".charCodeAt(0)&&r<"a".charCodeAt(0))return!1}return!0}(r))return void console.log("Invalid query.");var o="https://www.seventransistorlabs.com/bserv/BingoServer.dll?q="+r;console.log('Requesting short key "'+r+'" from server...'),fetch(new URL(o),{method:"GET"}).then((function(e){return console.log("Server accepted, status "+e.status+"..."),e.arrayBuffer()}),(function(e){setError("Error connecting to server.")})).then((function(e){console.log("...data received.");var t=new Uint8Array(e.slice(0,1));t=new Uint8Array(e.slice(1));var r="0x";t.forEach((e=>r+=e.toString(16)+", 0x")),r=r.substring(0,r.length-4),s=binToString(t),document.getElementById("textbox").value=s.text,parseText()}))}})),m=!!document.getElementById("kibitzing").checked}));const u={BingoChallenge:function(e){const t="BingoChallenge";e[0]=e[0].substring(0,255);var r=new Uint8Array(258);r[0]=challengeValue(t);var o=(new TextEncoder).encode(e[0]);return o=o.subarray(0,255),r.set(o,3),r[2]=o.length,{name:t,category:"Empty challenge class",items:[],values:[],description:e[0],comments:"",paint:[{type:"text",value:"∅",color:colorFloatToString(D.Unity_white)}],toBin:r.subarray(0,o.length+l)}},BingoAchievementChallenge:function(e){const t="BingoAchievementChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Passage",,"passage"],"goal selection"),o=Array(4);return o.fill(0),o[0]=challengeValue(t),o[3]=enumToValue(r[1],"passage"),o[2]=o.length-l,{name:t,category:"Obtaining Passages",items:["Passage"],values:[r[1]],description:"Earn "+(h[r[1]]||"unknown")+" passage.",comments:"",paint:[{type:"icon",value:"smallEmptyCircle",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:r[1]+"A",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"smallEmptyCircle",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}],toBin:new Uint8Array(o)}},BingoAllRegionsExcept:function(e){const t="BingoAllRegionsExcept";checkDescriptors(t,e.length,6,"parameter item count");var n=checkSettingbox(t,e[0],["System.String",,"Region",,"regionsreal"],"region selection"),a=(b[n[1]]||"")+" / "+(C[n[1]]||"");if(""===(a=a.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+n[1]+'" not found in regionCodeToDisplayName[]');var i=parseInt(e[2]);if(isNaN(i)||i<0||i>r)throw new TypeError(t+': error, amount "'+e[2]+'" not a number or out of range');var s=parseInt(e[3]);if(isNaN(s)){var c=checkSettingbox(t,e[3],["System.Int32",,"Amount",,"NULL"],"amount");s=parseInt(c[1]),e[3]=c[1]}if(s=Math.min(s,i+o),isNaN(s)||s<0||s>r)throw new TypeError(t+': error, amount "'+e[3]+'" not a number or SettingBox, or out of range');var g=Array(5);return g.fill(0),g[0]=challengeValue(t),g[3]=enumToValue(n[1],"regionsreal"),g[4]=s-i,e[1].split("|").forEach((e=>g.push(enumToValue(e,"regionsreal")))),g[2]=g.length-l,{name:t,category:"Entering regions while never visiting one",items:[n[2],"To do","Progress","Total"],values:[n[1],e[1],String(i),String(s)],description:"Enter "+String(s-i)+" regions that are not "+a+".",comments:'This challenge is potentially quite customizable; only regions in the list need to be entered. Normally, the list is populated with all campaign story regions (i.e. corresponding Wanderer pips), so that progress can be checked on the sheltering screen. All that matters towards completion, is Progress equaling Total; thus we can set a lower bar and play a "The Wanderer"-lite; or we could set a specific collection of regions to enter, to entice players towards them. Downside: the latter functionality is not currently supported in-game: the region list is something of a mystery unless viewed and manually tracked. (This goal generates with all regions listed, so that all will contribute towards the goal.)',paint:[{type:"icon",value:"TravellerA",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"buttonCrossA",scale:1,color:colorFloatToString(D.Unity_red),rotation:0},{type:"text",value:n[1],color:colorFloatToString(D.Unity_white)},{type:"break"},{type:"text",value:"["+String(i)+"/"+String(s)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(g)}},BingoBombTollChallenge:function(e){const t="BingoBombTollChallenge";checkDescriptors(t,e.length,4,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Scavenger Toll",,"tolls"],"toll selection");if(!L.includes(r[1]))throw new TypeError(t+': error, item "'+r[1]+'" not found in BingoEnum_BombableOutposts[]');var o=checkSettingbox(t,e[1],["System.Boolean",,"Pass the Toll",,"NULL"],"pass toll flag");if("true"!==o[1]&&"false"!==o[1])throw new TypeError(t+': error, pass toll flag "'+speci[1]+"\" not 'true' or 'false'");var n=regionOfRoom(r[1]).toUpperCase(),a=(b[n]||"")+" / "+(C[n]||"");if(""===(a=a.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+n+'" not found in regionCodeToDisplayName[]');"gw_c11"===r[1]&&(a+=" underground"),"gw_c05"===r[1]&&(a+=" surface");var i=[{type:"icon",value:"Symbol_StunBomb",scale:1,color:colorFloatToString(O.ScavengerBomb),rotation:0},{type:"icon",value:"scavtoll",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:r[1].toUpperCase(),color:colorFloatToString(D.Unity_white)}];"true"===o[1]&&i.splice(2,0,{type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0});var s=Array(4);return s.fill(0),s[0]=challengeValue(t),applyBool(s,1,4,o[1]),s[3]=enumToValue(r[1],"tolls"),s[2]=s.length-l,{name:t,category:"Throwing grenades at Scavenger tolls",items:[r[2],o[2]],values:[r[1],o[1]],description:"Throw a grenade at the "+a+" Scavenger toll"+("true"===o[1]?", then pass it.":"."),comments:"Bomb and pass must be done in that order, in the same cycle."+getMapLink(r[1].toUpperCase()),paint:i,toBin:new Uint8Array(s)}},BingoCollectPearlChallenge:function(e){const t="BingoCollectPearlChallenge";checkDescriptors(t,e.length,7,"parameter item count");var o=checkSettingbox(t,e[0],["System.Boolean",,"Specific Pearl",,"NULL"],"specific pearl flag");if("true"!==o[1]&&"false"!==o[1])throw new TypeError(t+': error, starving flag "'+o[1]+"\" not 'true' or 'false'");var n=checkSettingbox(t,e[1],["System.String",,"Pearl",,"pearls"],"pearl selection");if(!G.includes(n[1]))throw new TypeError(t+': error, item "'+n[1]+'" not found in DataPearlList[]');if(void 0===W[n[1]])throw new TypeError(t+': error, item "'+n[1]+'" not found in dataPearlToDisplayTextMap[]');var a,i=checkSettingbox(t,e[3],["System.Int32",,"Amount",,"NULL"],"amount selection"),s=parseInt(i[1]);if(isNaN(s)||s<0||s>r)throw new TypeError(t+': error, amount "'+i[1]+'" not a number or out of range');if("true"===o[1]){var c;if("MS"===n[1])c="Old "+b.GW;else{var g=z[n[1]];if(void 0===g)throw new TypeError(t+': error, item "'+n[1]+'" not found in dataPearlToRegionMap[]');if(c=b[g],"CL"===g&&(c=C[g]),void 0===c)throw new TypeError(t+': error, region "'+g+'" not found in regionCodeToDisplayName[]');"DM"===n[1]&&(c=b.DM+" / "+c)}d="Collect the "+W[n[1]]+" pearl from "+c+".",a=[{type:"text",value:n[1],color:colorFloatToString(D.Unity_white)},{type:"break"},{type:"icon",value:"Symbol_Pearl",scale:1,color:colorFloatToString(V[n[1]]),rotation:0,background:{type:"icon",value:"radialgradient",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}},{type:"break"},{type:"text",value:"[0/1]",color:colorFloatToString(D.Unity_white)}]}else d="Collect "+creatureNameQuantify(s,"colored pearls")+".",a=[{type:"icon",value:"pearlhoard_color",scale:1,color:colorFloatToString(O.Pearl),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(s)+"]",color:colorFloatToString(D.Unity_white)}];var m=Array(6);return m.fill(0),m[0]=challengeValue(t),applyBool(m,1,4,o[1]),m[3]=enumToValue(n[1],"pearls"),applyShort(m,4,s),m[2]=m.length-l,{name:t,category:"Collecting pearls",items:[o[2],n[2],i[2]],values:[o[1],n[1],i[1]],description:d,comments:"When collecting multiple pearls, this challenge acts like a flexible The Scholar passage. When collecting single pearls, the amount is unused; when collecting multiple, the location is unused.",paint:a,toBin:new Uint8Array(m)}},BingoCraftChallenge:function(e){const t="BingoCraftChallenge";checkDescriptors(t,e.length,5,"parameter item count");var o=checkSettingbox(t,e[0],["System.String",,"Item to Craft",,"craft"],"item selection");if(!f.includes(o[1]))throw new TypeError(t+': error, item "'+o[1]+'" not found in BingoEnum_CraftableItems[]');var n=M[o[1]]||R[o[1]];if(void 0===n)throw new TypeError(t+': error, item "'+o[1]+'" not found in creature- or itemNameToDisplayTextMap[]');var a=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"amount selection"),i=parseInt(a[1]);if(isNaN(i)||i<0||i>r)throw new TypeError(t+': error, amount "'+a[1]+'" not a number or out of range');var s=F[o[1]]||P[o[1]],c=colorFloatToString(I[o[1]]||O[o[1]]||I.Default),g=Array(6);return g.fill(0),g[0]=challengeValue(t),g[3]=enumToValue(o[1],"craft"),applyShort(g,4,i),g[2]=g.length-l,{name:t,category:"Crafting items",items:[o[2],a[2]],values:[o[1],a[1]],description:"Craft "+creatureNameQuantify(i,n)+".",comments:"",paint:[{type:"icon",value:"crafticon",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:s,scale:1,color:c,rotation:0},{type:"break"},{type:"text",value:"[0/"+String(i)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(g)}},BingoCreatureGateChallenge:function(e){const t="BingoCreatureGateChallenge";checkDescriptors(t,e.length,6,"parameter item count");var o=checkSettingbox(t,e[0],["System.String",,"Creature Type",,"transport"],"creature selection");if(!_.includes(o[1]))throw new TypeError(t+': error, item "'+o[1]+'" not found in BingoEnum_Transportable[]');var n=checkSettingbox(t,e[2],["System.Int32",,"Amount",,"NULL"],"amount selection"),a=parseInt(n[1]);if(isNaN(a)||a<0||a>r)throw new TypeError(t+': error, amount "'+n[1]+'" not a number or out of range');if(void 0===M[o[1]])throw new TypeError(t+': error, item "'+o[1]+'" not found in creature- or itemNameToDisplayTextMap[]');var i=Array(5);return i.fill(0),i[0]=challengeValue(t),i[3]=enumToValue(o[1],"transport"),i[4]=a,i[2]=i.length-l,{name:t,category:"Transporting the same creature through gates",items:[o[2],n[2],"Dictionary"],values:[o[1],n[1],e[3]],description:"Transport "+creatureNameQuantify(1,M[o[1]])+" through "+String(a)+" gate"+(a>1?"s.":"."),comments:"When a creature is taken through a gate, that gate room is added to a list. If a gate already appears in the list, taking that gate again will not advance the count. Thus, you can't grind progress by taking one gate back and forth. The list is stored per creature transported; thus, taking a new different creature does not advance the count, nor does piling creatures into one gate. When the gate count of any logged creature reaches the goal, credit is awarded.",paint:[{type:"icon",value:F[o[1]],scale:1,color:creatureToColor(o[1]),rotation:0},{type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"ShortcutGate",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(a)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(i)}},BingoCycleScoreChallenge:function(e){const t="BingoCycleScoreChallenge";checkDescriptors(t,e.length,3,"parameter item count");var o=checkSettingbox(t,e[0],["System.Int32",,"Target Score",,"NULL"],"score goal"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Scoring cycle points",items:[o[2]],values:[String(n)],description:"Earn "+String(n)+" points from creature kills in a single cycle.",comments:"",paint:[{type:"icon",value:"Multiplayer_Star",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"cycle_limit",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoDamageChallenge:function(e){const t="BingoDamageChallenge";6==e.length&&e.splice(4,0,"System.Boolean|false|In One Cycle|0|NULL","System.String|Any Region|Region|5|regions","System.String|Any Subregion|Subregion|4|subregions"),checkDescriptors(t,e.length,9,"parameter item count");var o=[],n=[],a=checkSettingbox(t,e[0],["System.String",,"Weapon",,"weapons"],"weapon choice");o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[1],["System.String",,"Creature Type",,"creatures"],"creature choice"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[3],["System.Int32",,"Amount",,"NULL"],"hit amount"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[4],["System.Boolean",,"In One Cycle",,"NULL"],"one-cycle flag"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[5],["System.String",,"Region",,"regions"],"region selection"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[6],["System.String",,"Subregion",,"subregions"],"subregion selection"),o.push(a[1]),n.push(a[2]);var i=parseInt(o[2]);if(isNaN(i)||i<0||i>r)throw new TypeError(t+': error, amount "'+o[2]+'" not a number or out of range');if(!S.includes(o[0]))throw new TypeError(t+': error, item selection "'+o[0]+'" not found in BingoEnum_Weapons[]');if("true"!==o[3]&&"false"!==o[3])throw new TypeError(t+': error, one-cycle flag "'+o[3]+"\" not 'true' or 'false'");var s="";if("Any Region"!==o[4]){if(""===(s=(s=(b[o[4]]||"")+" / "+(C[o[4]]||"")).replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region selection "'+o[4]+'" not found in regionCodeToDisplayName[]');s=", in "+s}if("Any Subregion"!==o[5]&&("Journey\\'s End"===o[5]&&(o[5]="Journey's End"),s=", in "+o[5],-1==T.indexOf(o[5])))throw new TypeError(t+': error, subregion selection "'+o[5]+'" not found in BingoEnum_AllSubregions[]');var c=[];if("Any Weapon"!==o[0]){if(void 0===R[o[0]])throw new TypeError(t+': error, item type "'+o[0]+'" not found in itemNameToDisplayTextMap[]');c.push({type:"icon",value:P[o[0]],scale:1,color:itemToColor(o[0]),rotation:0})}if(c.push({type:"icon",value:"bingoimpact",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}),"Any Creature"!==o[1]){if(void 0===M[o[1]])throw new TypeError(t+': error, creature type "'+o[1]+'" not found in creatureNameToDisplayTextMap[]');c.push({type:"icon",value:F[o[1]],scale:1,color:creatureToColor(o[1]),rotation:0})}var g="Hit ";"Any Subregion"===o[5]?"Any Region"!==o[4]&&(c.push({type:"break"}),c.push({type:"text",value:o[4],color:colorFloatToString(D.Unity_white)})):(c.push({type:"break"}),c.push({type:"text",value:o[5],color:colorFloatToString(D.Unity_white)}));g="Hit ";c.push({type:"break"}),g+=(M[o[1]]||o[1])+" with ",c.push({type:"text",value:"[0/"+String(i)+"]",color:colorFloatToString(D.Unity_white)}),"true"===o[3]&&c.push({type:"icon",value:"cycle_limit",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}),g+=R[o[0]]||o[0],g+=" "+String(i)+(i>1?" times":" time"),s>""&&(g+=s),"true"===o[3]&&(g+=", in one cycle"),g+=".";var m=Array(7);return m.fill(0),m[0]=challengeValue(t),m[3]=enumToValue(o[0],"weapons"),m[4]=enumToValue(o[1],"creatures"),applyShort(m,5,i),"false"===o[3]&&"Any Region"===o[4]&&"Any Subregion"===o[5]||(m[0]=challengeValue("BingoDamageExChallenge"),applyBool(m,1,4,o[3]),m.push(enumToValue(o[4],"regions")),m.push(enumToValue(o[5],"subregions"))),m[2]=m.length-l,{name:t,category:"Hitting creatures with items",items:n,values:o,description:g,comments:"",paint:c,toBin:new Uint8Array(m)}},BingoDepthsChallenge:function(e){const t="BingoDepthsChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Creature Type",,"depths"],"creature selection");if(!B.includes(r[1]))throw new TypeError(t+': error, item "'+r[1]+'" not found in BingoEnum_Depthable[]');var o=F[r[1]],n=colorFloatToString(I[r[1]]||I.Default),a=M[r[1]];if(void 0===a||void 0===o||void 0===n)throw new TypeError(t+': error, item "'+r[1]+'" not found in creatureNameToDisplayTextMap[]');a=creatureNameQuantify(1,a);var i=Array(4);return i.fill(0),i[0]=challengeValue(t),i[3]=enumToValue(r[1],"depths"),i[2]=i.length-l,{name:t,category:"Dropping a creature in the depth pit",items:[r[2]],values:[r[1]],description:"Drop "+a+" into the Depths drop room (SB_D06).",comments:"Player, and creature of target type, must be in the room at the same time, and the creature's position must be below the drop."+getMapLink("SB_D06"),paint:[{type:"icon",value:o,scale:1,color:n,rotation:0},{type:"icon",value:"deathpiticon",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"SB_D06",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(i)}},BingoDodgeLeviathanChallenge:function(e){const t="BingoDodgeLeviathanChallenge";checkDescriptors(t,e.length,2,"parameter item count");var r=Array(3);return r.fill(0),r[0]=challengeValue(t),r[2]=r.length-l,{name:t,category:"Dodging a Leviathan",items:[],values:[],description:"Dodge a Leviathan's bite",comments:"Being in close proximity to a Leviathan, as it's winding up a bite, will activate this goal. (A more direct/literal interpretation&mdash;having to have been physically inside its maw, then surviving after it slams shut&mdash;was found... too challenging by playtesters.)",paint:[{type:"icon",value:"leviathan_dodge",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}],toBin:new Uint8Array(r)}},BingoDontUseItemChallenge:function(e){const t="BingoDontUseItemChallenge";checkDescriptors(t,e.length,5,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Item type",,"banitem"],"item selection");if(!Y.banitem.includes(r[1]))throw new TypeError(t+': error, item "'+r[1]+'" not found in BingoEnum_banitem[]');var o=F[r[1]]||P[r[1]],n=colorFloatToString(I[r[1]]||O[r[1]]||I.Default),a=M[r[1]]||R[r[1]];if(void 0===a)throw new TypeError(t+': error, item "'+r[1]+'" not found in creature- or itemNameToDisplayTextMap[]');var i=Array(4);return i.fill(0),i[0]=challengeValue(t),applyBool(i,1,4,String("1"===e[1])),applyBool(i,1,5,String("1"===e[4])),i[3]=enumToValue(r[1],"banitem"),i[2]=i.length-l,{name:t,category:"Avoiding items",items:[r[2],"isFood","isCreature"],values:[r[2],"1"===e[1],"1"===e[4]],description:"Never "+("1"===e[1]?"eat":"use")+" "+a+".",comments:'"Using" an item involves throwing a throwable item, eating a food item, or holding any other type of item for 5 seconds. (When sheltering with insufficient food pips (currently eaten), food items in the shelter are consumed automatically. Auto-eating on shelter <em>will not</em> count against this goal!)',paint:[{type:"icon",value:"buttonCrossA",scale:1,color:colorFloatToString(D.Unity_red),rotation:0},{type:"icon",value:o,scale:1,color:n,rotation:0}],toBin:new Uint8Array(i)}},BingoEatChallenge:function(e){const t="BingoEatChallenge";checkDescriptors(t,e.length,6,"parameter item count");var o=checkSettingbox(t,e[0],["System.Int32",,"Amount",,"NULL"],"eat amount"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=checkSettingbox(t,e[3],["System.String",,"Food type",,"food"],"eat type");if(!v.includes(a[1]))throw new TypeError(t+': error, item selection "'+a[1]+'" not found in BingoEnum_FoodTypes[]');var i=F[a[1]]||P[a[1]],s=colorFloatToString(I[a[1]]||O[a[1]]||I.Default),c=M[a[1]]||R[a[1]],g=Array(6);return g.fill(0),g[0]=challengeValue(t),applyShort(g,3,n),applyBool(g,1,4,String("1"===e[2])),g[5]=enumToValue(a[1],"food"),g[2]=g.length-l,{name:t,category:"Eating specific food",items:[o[2],a[2]],values:[o[1],a[1]],description:"Eat "+creatureNameQuantify(n,c)+".",comments:"",paint:[{type:"icon",value:"foodSymbol",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:i,scale:1,color:s,rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(g)}},BingoEchoChallenge:function(e){const t="BingoEchoChallenge";checkDescriptors(t,e.length,4,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Region",,"echoes"],"echo region"),o=(b[r[1]]||"")+" / "+(C[r[1]]||"");if(""===(o=o.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+r[1]+'" not found in regionCodeToDisplayName[]');if(items=checkSettingbox(t,e[1],["System.Boolean",,"While Starving",,"NULL"],"starving flag"),"true"!==items[1]&&"false"!==items[1])throw new TypeError(t+': error, starving flag "'+items[1]+"\" not 'true' or 'false'");var n=[{type:"icon",value:"echo_icon",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"text",value:r[1],color:colorFloatToString(D.Unity_white)}];"true"===items[1]&&(n.push({type:"break"}),n.push({type:"icon",value:"Multiplayer_Death",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}));var a=Array(4);return a.fill(0),a[0]=challengeValue(t),applyBool(a,1,4,items[1]),a[3]=enumToValue(r[1],"echoes"),a[2]=a.length-l,{name:t,category:"Visiting echoes",items:[r[2],items[2]],values:[r[1],items[1]],description:"Visit the "+o+" Echo"+("true"===items[1]?", while starving.":"."),comments:"",paint:n,toBin:new Uint8Array(a)}},BingoEnterRegionChallenge:function(e){const t="BingoEnterRegionChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Region",,"regionsreal"],"enter region"),o=(b[r[1]]||"")+" / "+(C[r[1]]||"");if(""===(o=o.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+r[1]+'" not found in regionCodeToDisplayName[]');var n=Array(4);return n.fill(0),n[0]=challengeValue(t),n[3]=enumToValue(r[1],"regionsreal"),n[2]=n.length-l,{name:t,category:"Entering a region",items:[r[2]],values:[r[1]],description:"Enter "+o+".",comments:"",paint:[{type:"icon",value:"keyShiftA",scale:1,color:colorFloatToString(D.Unity_green),rotation:90},{type:"text",value:r[1],color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(n)}},BingoGlobalScoreChallenge:function(e){const t="BingoGlobalScoreChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Target Score",,"NULL"],"score goal"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Scoring global points",items:[o[2]],values:[String(n)],description:"Earn "+n+" points from creature kills.",comments:"",paint:[{type:"icon",value:"Multiplayer_Star",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+n+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoGreenNeuronChallenge:function(e){const t="BingoGreenNeuronChallenge";if(checkDescriptors(t,e.length,3,"parameter item count"),items=checkSettingbox(t,e[0],["System.Boolean",,"Looks to the Moon",,"NULL"],"iterator choice flag"),"true"!==items[1]&&"false"!==items[1])throw new TypeError(t+': error, iterator choice flag "'+items[1]+"\" not 'true' or 'false'");var r,o=[{type:"icon",value:"GuidanceNeuron",scale:1,color:colorFloatToString(D.GuidanceNeuron),rotation:0},{type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}];"true"===items[1]?(r="Reactivate Looks to the Moon.",o.push({type:"icon",value:"GuidanceMoon",scale:1,color:colorFloatToString(D.GuidanceMoon),rotation:0})):(r="Deliver the green neuron to Five Pebbles.",o.push({type:"icon",value:"nomscpebble",scale:1,color:colorFloatToString(D.nomscpebble),rotation:0}));var n=Array(3);return n.fill(0),n[0]=challengeValue(t),applyBool(n,1,4,items[1]),n[2]=n.length-l,{name:t,category:"Delivering the green neuron",items:[items[2]],values:[items[1]],description:r,comments:"The green neuron only has to enter the screen the iterator is on and start the cutscene; waiting for full dialog/startup is not required for credit.",paint:o,toBin:new Uint8Array(n)}},BingoHatchNoodleChallenge:function(e){const t="BingoHatchNoodleChallenge";checkDescriptors(t,e.length,5,"parameter item count");var r=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"egg count"),n=parseInt(r[1]);if(n=Math.min(n,o),isNaN(n)||n<0)throw new TypeError(t+': error, amount "'+r[1]+'" not a number or out of range');if(items=checkSettingbox(t,e[2],["System.Boolean",,"At Once",,"NULL"],"one-cycle flag"),"true"!==items[1]&&"false"!==items[1])throw new TypeError(t+': error, one-cycle flag "'+items[1]+"\" not 'true' or 'false'");var a=[{type:"icon",value:P.NeedleEgg,scale:1,color:colorFloatToString(O.NeedleEgg),rotation:0},{type:"icon",value:F.SmallNeedleWorm,scale:1,color:creatureToColor("SmallNeedleWorm"),rotation:0},{type:"break"},{type:"text",value:"[0/"+n+"]",color:colorFloatToString(D.Unity_white)}];"true"===items[1]&&a.splice(2,0,{type:"icon",value:"cycle_limit",scale:1,color:colorFloatToString(D.Unity_white),rotation:0});var i=Array(4);return i.fill(0),i[0]=challengeValue(t),i[3]=n,applyBool(i,1,4,items[1]),i[2]=i.length-l,{name:t,category:"Hatching noodlefly eggs",items:[r[2],items[2]],values:[r[1],items[1]],description:"Hatch "+creatureNameQuantify(n,R.NeedleEgg)+("true"===items[1]?" in one cycle.":"."),comments:"Eggs must be hatched where the player is sheltering. Eggs stored in other shelters disappear and do not give credit towards this goal.",paint:a,toBin:new Uint8Array(i)}},BingoHellChallenge:function(e){const t="BingoHellChallenge";checkDescriptors(t,e.length,4,"parameter item count");var r=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"goal count"),n=parseInt(r[1]);if(n=Math.min(n,o),isNaN(n)||n<0)throw new TypeError(t+': error, amount "'+r[1]+'" not a number or out of range');var a=Array(4);return a.fill(0),a[0]=challengeValue(t),a[3]=n,a[2]=a.length-l,{name:t,category:"Not dying before completing challenges",items:[r[2]],values:[String(n)],description:"Do not die before completing "+creatureNameQuantify(n,"bingo challenges")+".",comments:"",paint:[{type:"icon",value:"completechallenge",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"text",value:"[0/"+n+"]",color:colorFloatToString(D.Unity_white)},{type:"break"},{type:"icon",value:"buttonCrossA",scale:1,color:colorFloatToString(D.Unity_red),rotation:0},{type:"icon",value:"Multiplayer_Death",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}],toBin:new Uint8Array(a)}},BingoItemHoardChallenge:function(e){const t="BingoItemHoardChallenge";4==e.length&&(e.unshift("System.Boolean|false|Any Shelter|2|NULL","0"),e.push("")),checkDescriptors(t,e.length,7,"parameter item count");var r=checkSettingbox(t,e[0],["System.Boolean",,"Any Shelter",,"NULL"],"any shelter flag"),n=checkSettingbox(t,e[2],["System.Int32",,"Amount",,"NULL"],"item count"),a=checkSettingbox(t,e[3],["System.String",,"Item",,"expobject"],"item selection");if(!y.includes(a[1]))throw new TypeError(t+': error, item selection "'+a[1]+'" not found in BingoEnum_expobject[]');var i=parseInt(n[1]);if(i=Math.min(i,o),isNaN(i)||i<0)throw new TypeError(t+': error, amount "'+a[1]+'" not a number or out of range');if("true"!==r[1]&&"false"!==r[1])throw new TypeError(t+': error, any shelter flag "'+r[1]+"\" not 'true' or 'false'");var s=Array(5);return s.fill(0),s[0]=challengeValue(t),applyBool(s,1,4,r[1]),s[3]=i,s[4]=enumToValue(a[1],"expobject"),s[2]=s.length-l,{name:t,category:"Hoarding items in shelters",items:[n[2],a[2]],values:[String(i),a[1]],description:"Store "+creatureNameQuantify(i,R[a[1]])+" in "+("true"===r[1]?"any shelter(s).":1==i?"a shelter.":"the same shelter."),comments:"The 'Any Shelter' option counts the total across any shelters in the world. Counts are per item ID, and are updated on shelter close. Counts never go down, so the items are free to use after bringing them into a shelter, including eating or removing them. Because items are tracked by ID, this goal cannot be cheesed by taking the same items between multiple shelters; multiple unique items must be hoarded. In short, it's the act of hoarding (putting new items in a shelter and closing the shelter) that counts up.",paint:[{type:"icon",value:"true"===r[1]?"doubleshelter":"ShelterMarker",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:P[a[1]],scale:1,color:itemToColor(a[1]),rotation:0},{type:"break"},{type:"text",value:"[0/"+i+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(s)}},BingoKarmaFlowerChallenge:function(e){const t="BingoKarmaFlowerChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"item count"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Consuming Karma Flowers",items:[o[2]],values:[String(n)],description:"Consume "+creatureNameQuantify(n,"Karma Flowers")+".",comments:"With this goal present on the board, flowers are spawned in the world in their normal locations. The player obtains the benefit of consuming the flower (protecting karma level). While the goal is in progress, players <em>do not drop</em> the flower on death. After the goal is completed or locked, a flower can drop on death as normal.",paint:[{type:"icon",value:"foodSymbol",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"FlowerMarker",scale:1,color:colorFloatToString(D.SaturatedGold),rotation:0},{type:"break"},{type:"text",value:"[0/"+o[1]+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoKillChallenge:function(e){const t="BingoKillChallenge";checkDescriptors(t,e.length,11,"parameter item count");var o=[],n=[],a=checkSettingbox(t,e[0],["System.String",,"Creature Type",,"creatures"],"target selection");o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[1],["System.String",,"Weapon Used",,"weaponsnojelly"],"weapon selection"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[2],["System.Int32",,"Amount",,"NULL"],"kill count"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[4],["System.String",,"Region",,"regions"],"region selection"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[5],["System.String",,"Subregion",,"subregions"],"subregion selection"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[6],["System.Boolean",,"In one Cycle",,"NULL"],"one-cycle flag"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[7],["System.Boolean",,"Via a Death Pit",,"NULL"],"death pit flag"),o.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[8],["System.Boolean",,"While Starving",,"NULL"],"starving flag"),o.push(a[1]),n.push(a[2]);var i="",s=parseInt(o[2]);if(isNaN(s)||s<0||s>r)throw new TypeError(t+': error, amount "'+o[2]+'" not a number or out of range');var c=String(s)+" creatures";if("Any Creature"!==o[0]){if(void 0===M[o[0]])throw new TypeError(t+': error, creature type "'+o[0]+'" not found in creatureNameToDisplayTextMap[]');c=creatureNameQuantify(s,M[o[0]])}if("Any Region"!==o[3]){if(""===(i=(i=(b[o[3]]||"")+" / "+(C[o[3]]||"")).replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region selection "'+o[3]+'" not found in regionCodeToDisplayName[]');i=" in "+i}if("Any Subregion"!==o[4]&&("Journey\\'s End"===o[4]&&(o[4]="Journey's End"),i=" in "+o[4],-1==T.indexOf(o[4])))throw new TypeError(t+': error, subregion selection "'+o[4]+'" not found in BingoEnum_AllSubregions[]');var g=", with a death pit";if(!S.includes(o[1]))throw new TypeError(t+': error, weapon selection "'+o[1]+'" not found in BingoEnum_Weapons[]');"false"===o[6]&&(g="Any Weapon"!==o[1]?" with "+R[o[1]]:"");var m=[];if("Any Weapon"===o[1]&&"true"!==o[6]||("true"===o[6]?m.push({type:"icon",value:"deathpiticon",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}):m.push({type:"icon",value:P[o[1]],scale:1,color:itemToColor(o[1]),rotation:0})),"true"!==o[5]&&"false"!==o[5])throw new TypeError(t+': error, one-cycle flag "'+o[5]+"\" not 'true' or 'false'");if("true"!==o[6]&&"false"!==o[6])throw new TypeError(t+': error, death pit flag "'+o[6]+"\" not 'true' or 'false'");if("true"!==o[7]&&"false"!==o[7])throw new TypeError(t+': error, starving flag "'+o[7]+"\" not 'true' or 'false'");m.push({type:"icon",value:"Multiplayer_Bones",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}),"Any Creature"!==o[0]&&m.push({type:"icon",value:F[o[0]],scale:1,color:creatureToColor(o[0]),rotation:0}),m.push({type:"break"}),"Any Subregion"===o[4]?"Any Region"!==o[3]&&(m.push({type:"text",value:o[3],color:colorFloatToString(D.Unity_white)}),m.push({type:"break"})):(m.push({type:"text",value:o[4],color:colorFloatToString(D.Unity_white)}),m.push({type:"break"})),m.push({type:"text",value:"[0/"+o[2]+"]",color:colorFloatToString(D.Unity_white)}),"true"===o[7]&&m.push({type:"icon",value:"Multiplayer_Death",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}),"true"===o[5]&&m.push({type:"icon",value:"cycle_limit",scale:1,color:colorFloatToString(D.Unity_white),rotation:0});var u=Array(9);return u.fill(0),u[0]=challengeValue(t),applyBool(u,1,4,o[5]),applyBool(u,1,5,o[6]),applyBool(u,1,6,o[7]),u[3]=enumToValue(o[0],"creatures"),u[4]=enumToValue(o[1],"weaponsnojelly"),applyShort(u,5,s),u[7]=enumToValue(o[3],"regions"),u[8]=enumToValue(o[4],"subregions"),u[2]=u.length-l,{name:t,category:"Killing creatures",items:n,values:o,description:"Kill "+c+i+g+("true"===o[7]?", while starving":"")+("true"===o[5]?", in one cycle":"")+".",comments:'(If defined, subregion takes precedence over region. If set, Death Pit takes precedence over weapon selection.)<br>Credit is determined by the last source of \'blame\' at time of death. For creatures that take multiple hits, try to "soften them up" with more common items, before using limited ammunition to deliver the killing blow.  Creatures that "bleed out", can be mortally wounded (brought to or below 0 HP), before being tagged with a specific weapon to obtain credit. Conversely, weapons that do slow damage (like Spore Puff) can lose blame over time; consider carrying additional ammunition to deliver the killing blow. Starving: must be in the "malnourished" state; this state is cleared after eating to full.<br>Note: the reskinned BLLs in the Past Garbage Wastes tunnel, count as both BLL and DLL for this challenge.',paint:m,toBin:new Uint8Array(u)}},BingoMaulTypesChallenge:function(e){const t="BingoMaulTypesChallenge";checkDescriptors(t,e.length,5,"parameter item count");var r=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"maul amount"),o=parseInt(r[1]);if(isNaN(o)||o<0||o>Y.creatures.length)throw new TypeError(t+': error, amount "'+r[1]+'" not a number or out of range');var n=Array(4);return n.fill(0),n[0]=challengeValue(t),n[3]=o,n[2]=n.length-l,{name:t,category:"Mauling different types of creatures",items:["Amount"],values:[String(o)],description:"Maul "+String(o)+" different types of creatures.",comments:"",paint:[{type:"icon",value:"artimaulcrit",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(o)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(n)}},BingoMaulXChallenge:function(e){const t="BingoMaulXChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"maul amount"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Mauling creatures a certain amount of times",items:["Amount"],values:[String(n)],description:"Maul creatures "+String(n)+" times.",comments:"",paint:[{type:"icon",value:"artimaul",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoNeuronDeliveryChallenge:function(e){const t="BingoNeuronDeliveryChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[0],["System.Int32",,"Amount of Neurons",,"NULL"],"neuron amount"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Gifting neurons",items:["Amount"],values:[String(n)],description:"Deliver "+creatureNameQuantify(n,"Neurons")+" to Looks to the Moon.",comments:"",paint:[{type:"icon",value:"Symbol_Neuron",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"GuidanceMoon",scale:1,color:colorFloatToString(D.GuidanceMoon),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoNoNeedleTradingChallenge:function(e){const t="BingoNoNeedleTradingChallenge";checkDescriptors(t,e.length,2,"parameter item count");var r=Array(3);return r.fill(0),r[0]=challengeValue(t),r[2]=r.length-l,{name:t,category:"Avoiding gifting Needles to Scavengers",items:[],values:[],description:"Do not gift Needles to Scavengers.",comments:"",paint:[{type:"icon",value:"spearneedle",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"commerce",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"Kill_Scavenger",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"icon",value:"buttonCrossA",scale:1,color:colorFloatToString(D.Unity_red),rotation:0}],toBin:new Uint8Array(r)}},BingoNoRegionChallenge:function(e){const t="BingoNoRegionChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Region",,"regionsreal"],"avoid region"),o=(b[r[1]]||"")+" / "+(C[r[1]]||"");if(""===(o=o.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+r[1]+'" not found in regionCodeToDisplayName[]');var n=Array(4);return n.fill(0),n[0]=challengeValue(t),n[3]=enumToValue(r[1],"regionsreal"),n[2]=n.length-l,{name:t,category:"Avoiding a region",items:[r[2]],values:[r[1]],description:"Do not enter "+o+".",comments:"",paint:[{type:"icon",value:"buttonCrossA",scale:1,color:colorFloatToString(D.Unity_red),rotation:0},{type:"text",value:r[1],color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(n)}},BingoPearlDeliveryChallenge:function(e){const t="BingoPearlDeliveryChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Pearl from Region",,"regions"],"pearl region"),o=(b[r[1]]||"")+" / "+(C[r[1]]||"");if(""===(o=o.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+r[1]+'" not found in regionCodeToDisplayName[]');var n=Array(4);return n.fill(0),n[0]=challengeValue(t),n[3]=enumToValue(r[1],"regions"),n[2]=n.length-l,{name:t,category:"Delivering colored pearls to an Iterator",items:[r[2]],values:[r[1]],description:"Deliver "+o+" colored pearl to Looks To The Moon (Artificer: Five Pebbles)",comments:"",paint:[{type:"text",value:r[1],color:colorFloatToString(D.Unity_white)},{type:"icon",value:"Symbol_Pearl",scale:1,color:colorFloatToString(O.Pearl),rotation:0},{type:"break"},{type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:90},{type:"break"},{type:"icon",value:"GuidanceMoon",scale:1,color:colorFloatToString(D.GuidanceMoon),rotation:0}],toBin:new Uint8Array(n)}},BingoPearlHoardChallenge:function(e){const t="BingoPearlHoardChallenge";checkDescriptors(t,e.length,5,"parameter item count");var o=[],n=[],a=checkSettingbox(t,e[0],["System.Boolean",,"Common Pearls",,"NULL"],"common pearls flag");o.push(a[1]),n.push(a[2]);a=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"pearl count");o.push(a[1]),n.push(a[2]),e[2]=e[2].replace(/regionsreal/,"regions");a=checkSettingbox(t,e[2],["System.String",,"In Region",,"regions"],"region selection");if(o.push(a[1]),n.push(a[2]),"true"!==o[0]&&"false"!==o[0])throw new TypeError(t+': error, common pearls flag "'+o[0]+"\" not 'true' or 'false'");var i=parseInt(o[1]);if(isNaN(i)||i<0||i>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');if("Any Region"!==o[2]){var s=(b[o[2]]||"")+" / "+(C[o[2]]||"");if(""===(s=s.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+o[2]+'" not found in regionCodeToDisplayName[]')}else s="any region";var c=" common pearls";"false"===o[0]&&(c=" colored pearls"),1==i&&(c=c.substring(0,c.length-1));var g=Array(6);return g.fill(0),g[0]=challengeValue(t),applyBool(g,1,4,o[0]),applyShort(g,3,i),g[5]=enumToValue(o[2],"regions"),g[2]=g.length-l,{name:t,category:"Hoarding pearls in shelters",items:n,values:o,description:"Store "+String(i)+c+" in a shelter in "+s+".",comments:'Note: faded pearls (colored pearl spawns in Saint campaign) do not count toward a "common pearls" goal.',paint:[{type:"icon",value:"ShelterMarker",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"true"===o[0]?"pearlhoard_normal":"pearlhoard_color",scale:1,color:colorFloatToString(O.Pearl),rotation:0},{type:"text",value:o[2],color:colorFloatToString(D.Unity_white)},{type:"break"},{type:"text",value:"[0/"+String(i)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(g)}},BingoPinChallenge:function(e){const t="BingoPinChallenge";checkDescriptors(t,e.length,7,"parameter item count");var o=[],n=[],a=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"pin amount");o.push(a[1]),n.push(a[2]);a=checkSettingbox(t,e[2],["System.String",,"Creature Type",,"creatures"],"creature type");o.push(a[1]),n.push(a[2]);a=checkSettingbox(t,e[4],["System.String",,"Region",,"regions"],"region selection");o.push(a[1]),n.push(a[2]);var i=parseInt(o[0]);if(isNaN(i)||i<0||i>r)throw new TypeError(t+': error, amount "'+o[0]+'" not a number or out of range');var s="creatures";if("Any Creature"!==o[1]){if(void 0===M[o[1]])throw new TypeError(t+': error, creature type "'+o[1]+'" not found in creatureNameToDisplayTextMap[]');s=M[o[1]]}s=creatureNameQuantify(i,s);var c=o[2];if("Any Region"!==c){if(""===(c=(c=(b[o[2]]||"")+" / "+(C[o[2]]||"")).replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+o[2]+'" not found in regionCodeToDisplayName[]')}else c="different regions";var g=[{type:"icon",value:"pin_creature",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}];"Any Creature"!==o[1]&&g.push({type:"icon",value:F[o[1]],scale:1,color:colorFloatToString(I[o[1]]||I.Default),rotation:0}),"Any Region"===o[2]?g.push({type:"icon",value:"TravellerA",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}):g.push({type:"text",value:o[2],color:colorFloatToString(D.Unity_white)}),g.push({type:"break"}),g.push({type:"text",value:"[0/"+String(i)+"]",color:colorFloatToString(D.Unity_white)});var m=Array(7);return m.fill(0),m[0]=challengeValue(t),applyShort(m,3,i),m[5]=enumToValue(o[1],"creatures"),m[6]=enumToValue(o[2],"regions"),m[2]=m.length-l,{name:t,category:"Pinning creatures to walls",items:n,values:o,description:"Pin "+s+" to walls or floors in "+c+".",comments:'A creature does not need to be alive to obtain pin credit. Sometimes a body chunk gets pinned but does not credit the challenge; keep retrying on different parts of a corpse until it works. "Different regions" means one pin per region, as many unique regions as pins required.',paint:g,toBin:new Uint8Array(m)}},BingoPopcornChallenge:function(e){const t="BingoPopcornChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"pop amount"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Popping popcorn plants",items:[o[2]],values:[String(n)],description:"Open "+creatureNameQuantify(n,"popcorn plants")+".",comments:"",paint:[{type:"icon",value:"Symbol_Spear",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"popcorn_plant",scale:1,color:colorFloatToString(D.popcorn_plant),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoRivCellChallenge:function(e){const t="BingoRivCellChallenge";checkDescriptors(t,e.length,2,"parameter item count");var r=Array(3);return r.fill(0),r[0]=challengeValue(t),r[2]=r.length-l,{name:t,category:"Feeding the Rarefaction Cell to a Leviathan",items:[],values:[],description:"Feed the Rarefaction Cell to a Leviathan (completes if you die).",comments:"Truly, the Rarefaction Cell's explosion transcends time and space; hence, this goal is awarded even if the player dies in the process. Godspeed, little Water Dancer.",paint:[{type:"icon",value:"Symbol_EnergyCell",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"Kill_BigEel",scale:1,color:colorFloatToString(I.BigEel||I.Default),rotation:0}],toBin:new Uint8Array(r)}},BingoSaintDeliveryChallenge:function(e){const t="BingoSaintDeliveryChallenge";checkDescriptors(t,e.length,2,"parameter item count");var r=Array(3);return r.fill(0),r[0]=challengeValue(t),r[2]=r.length-l,{name:t,category:"Delivering the music pearl to Five Pebbles",items:[],values:[],description:"Deliver the music pearl to Five Pebbles",comments:"",paint:[{type:"icon",value:"memoriespearl",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"nomscpebble",scale:1,color:colorFloatToString(D.nomscpebble),rotation:0}],toBin:new Uint8Array(r)}},BingoSaintPopcornChallenge:function(e){const t="BingoSaintPopcornChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Amount",,"NULL"],"seed amount"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Eating popcorn plant seeds",items:[o[2]],values:[String(n)],description:"Eat "+creatureNameQuantify(n,"popcorn plant seeds")+".",comments:"",paint:[{type:"icon",value:"foodSymbol",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"Symbol_Seed",scale:1,color:colorFloatToString(O.Default),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoStealChallenge:function(e){const t="BingoStealChallenge";checkDescriptors(t,e.length,6,"parameter item count");var o=[],n=[],a=[{type:"icon",value:"steal_item",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}],i=checkSettingbox(t,e[0],["System.String",,"Item",,"theft"],"item selection");if(o.push(i[1]),n.push(i[2]),!p.includes(o[0]))throw new TypeError(t+': error, item "'+o[0]+'" not found in BingoEnum_theft[]');if(i=checkSettingbox(t,e[3],["System.Int32",,"Amount",,"NULL"],"item count"),o.push(i[1]),n.push(i[2]),i=checkSettingbox(t,e[1],["System.Boolean",,"From Scavenger Toll",,"NULL"],"venue flag"),o.push(i[1]),n.push(i[2]),void 0===R[o[0]])throw new TypeError(t+': error, item selection "'+o[2]+'" not found in itemNameToDisplayTextMap[]');var s=parseInt(o[1]);if(isNaN(s)||s<0||s>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var c="Steal "+String(s)+" "+R[o[0]]+" from ";if(a.push({type:"icon",value:P[o[0]],scale:1,color:itemToColor(o[0]),rotation:0}),"true"===o[2])a.push({type:"icon",value:"scavtoll",scale:.8,color:colorFloatToString(D.Unity_white),rotation:0}),c+="a Scavenger Toll.";else{if("false"!==o[2])throw new TypeError(t+': error, venue flag "'+o[2]+"\" not 'true' or 'false'");a.push({type:"icon",value:F.Scavenger,scale:1,color:creatureToColor("Scavenger"),rotation:0}),c+="Scavengers."}a.push({type:"break"}),a.push({type:"text",value:"[0/"+o[1]+"]",color:colorFloatToString(D.Unity_white)});var g=Array(6);return g.fill(0),g[0]=challengeValue(t),g[3]=enumToValue(o[0],"theft"),applyBool(g,1,4,o[2]),applyShort(g,4,s),g[2]=g.length-l,{name:t,category:"Stealing items",items:n,values:o,description:c,comments:"",paint:a,toBin:new Uint8Array(g)}},BingoTameChallenge:function(e){const t="BingoTameChallenge";3==e.length&&(e.unshift("System.Boolean|true|Specific Creature Type|0|NULL"),e.splice(2,0,"0","System.Int32|1|Amount|3|NULL"),e.push("")),checkDescriptors(t,e.length,7,"parameter item count");var r=[],n=[],a=checkSettingbox(t,e[0],["System.Boolean",,"Specific Creature Type",,"NULL"],"creature type flag");r.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[1],["System.String",,"Creature Type",,"friend"],"friend selection"),r.push(a[1]),n.push(a[2]),a=checkSettingbox(t,e[3],["System.Int32",,"Amount",,"NULL"],"friend count"),r.push(a[1]),n.push(a[2]);var i=parseInt(r[2]);if(i=Math.min(i,o),isNaN(i)||i<0)throw new TypeError(t+': error, amount "'+r[2]+'" not a number or out of range');if("Any Creature"!==r[1]&&void 0===M[r[1]])throw new TypeError(t+': error, creature type "'+r[1]+'" not found in creatureNameToDisplayTextMap[]');var s=creatureNameQuantify(1,M[r[1]]||r[1]),c=[{type:"icon",value:"FriendB",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}];if("true"===r[0])c.push({type:"icon",value:F[r[1]],scale:1,color:creatureToColor(r[1]),rotation:0});else{if("false"!==r[0])throw new TypeError(t+': error, specific creature flag "'+r[0]+"\" not 'true' or 'false'");c.push({type:"break"}),c.push({type:"text",value:"[0/"+String(i)+"]",color:colorFloatToString(D.Unity_white)})}var g=Array(4);return g.fill(0),g[0]=challengeValue(t),g[3]=enumToValue(r[1],"friend"),"false"===r[0]&&(g[0]=challengeValue("BingoTameExChallenge"),applyBool(g,1,4,r[0]),g.push(i)),g[2]=g.length-l,{name:t,category:"Befriending creatures",items:n,values:r,description:"true"===r[0]?"Befriend "+s+".":"Befriend [0/"+i+"] unique creatures.",comments:"Taming occurs when a creature has been fed or rescued enough times to increase the player's reputation above some threshold, starting from a default depending on species, and the global and regional reputation of the player.<br>Feeding occurs when: 1. the player drops an edible item, creature or corpse, 2. within view of the creature, and 3. the creature bites that object. A \"happy lizard\" sound indicates success. The creature does not need to den with the item to increase reputation. Stealing the object back from the creature's jaws does not reduce reputation.<br>A rescue occurs when: 1. a creature sees or is grabbed by a threat, 2. the player attacks the threat (if the creatures was grabbed, the predator must be stunned enough to drop the creature), and 3. the creature sees the attack (or gets dropped because of it).<br>For the multiple-tame option, creature <i>types</i> count toward progress (multiple tames of a given type/color/species do not increase the count). Note that any befriendable creature type counts towards the total, including both Lizards and Squidcadas.",paint:c,toBin:new Uint8Array(g)}},BingoTradeChallenge:function(e){const t="BingoTradeChallenge";checkDescriptors(t,e.length,4,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Value",,"NULL"],"points value"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Trading items to Merchants",items:[o[2]],values:[String(n)],description:"Trade "+String(n)+" points worth of items to Scavenger Merchants.",comments:"A trade occurs when: 1. a Scavenger sees you with item in hand, 2. sees you drop the item, and 3. picks up that item. When the Scavenger is also a Merchant, points will be awarded. Any item can be traded once to award points according to its value; this includes items initially held (then dropped/traded) by Scavenger Merchants. If an item seems to have been ignored or missed, try trading it again.<br>Stealing and murder will <em>not</em> result in points being awarded.",paint:[{type:"icon",value:"scav_merchant",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoTradeTradedChallenge:function(e){const t="BingoTradeTradedChallenge";checkDescriptors(t,e.length,5,"parameter item count");var o=checkSettingbox(t,e[1],["System.Int32",,"Amount of Items",,"NULL"],"amount of items"),n=parseInt(o[1]);if(isNaN(n)||n<0||n>r)throw new TypeError(t+': error, amount "'+o[1]+'" not a number or out of range');var a=Array(5);return a.fill(0),a[0]=challengeValue(t),applyShort(a,3,n),a[2]=a.length-l,{name:t,category:"Trading already traded items",items:[o[2]],values:[String(n)],description:"Trade "+String(n)+(1==n?" item":" items")+" from Scavenger Merchants to other Scavenger Merchants.",comments:'A trade occurs when: 1. a Scavenger sees you with item in hand, 2. sees you drop the item, and 3. picks up that item. While this challenge is active, any item dropped by a Merchant, due to a trade, will be "blessed" and thereafter bear a mark indicating its eligibility for this challenge.<br>In a Merchant room, the Merchant bears a \'<span style="color: #00ff00; font-weight: bold;">✓</span>\' tag to show who you should trade with; other Scavengers in the room are tagged with \'<span style="color: #ff0000; font-weight: bold;">X</span>\'.<br>A "blessed" item can then be brought to any <em>other</em> Merchant and traded, to award credit.<br>Stealing from or murdering a Merchant will not result in "blessed" items dropping (unless they were already traded).',paint:[{type:"icon",value:"scav_merchant",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"Menu_Symbol_Shuffle",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"icon",value:"scav_merchant",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:"[0/"+String(n)+"]",color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(a)}},BingoTransportChallenge:function(e){const t="BingoTransportChallenge";checkDescriptors(t,e.length,6,"parameter item count");var r=[],o=[],n=checkSettingbox(t,e[0],["System.String",,"From Region",,"regions"],"from region");r.push(n[1]),o.push(n[2]);n=checkSettingbox(t,e[1],["System.String",,"To Region",,"regions"],"to region");r.push(n[1]),o.push(n[2]);n=checkSettingbox(t,e[2],["System.String",,"Creature Type",,"transport"],"transportable creature type");r.push(n[1]),o.push(n[2]);var a=r[0],i=r[1];if("Any Region"!==a&&""===(a=(a=(b[r[0]]||"")+" / "+(C[r[0]]||"")).replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+r[0]+'" not found in regionCodeToDisplayName[]');if("Any Region"!==i&&""===(i=(i=(b[r[1]]||"")+" / "+(C[r[1]]||"")).replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+r[1]+'" not found in regionCodeToDisplayName[]');if(void 0===M[r[2]])throw new TypeError(t+': error, creature type "'+r[2]+'" not found in creatureNameToDisplayTextMap[]');if(!_.includes(r[2]))throw new TypeError(t+': error, creature type "'+r[2]+'" not Transportable');var s=[{type:"icon",value:F[r[2]],scale:1,color:creatureToColor(r[2]),rotation:0},{type:"break"}];if(void 0===s[0].value||void 0===s[0].color)throw new TypeError(t+': error, token "'+r[2]+'" not found in itemNameToIconAtlasMap[] or Color');"Any Region"!==r[0]&&s.push({type:"text",value:r[0],color:colorFloatToString(D.Unity_white)}),s.push({type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}),"Any Region"!==r[1]&&s.push({type:"text",value:r[1],color:colorFloatToString(D.Unity_white)});var c=Array(6);return c.fill(0),c[0]=challengeValue(t),c[3]=enumToValue(r[0],"regions"),c[4]=enumToValue(r[1],"regions"),c[5]=enumToValue(r[2],"transport"),c[2]=c.length-l,{name:t,category:"Transporting creatures",items:o,values:r,description:"Transport "+creatureNameQuantify(1,M[r[2]])+" from "+a+" to "+i,comments:"When a specific 'From' region is selected, that creature can also be brought in from an outside region, placed on the ground, then picked up in that region, to activate it for the goal. Note: keeping a swallowable creature always in stomach will NOT count in this way, nor will throwing it up and only holding in hand, but not dropping then grabbing.",paint:s,toBin:new Uint8Array(c)}},BingoUnlockChallenge:function(e){const t="BingoUnlockChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r,o=checkSettingbox(t,e[0],["System.String",,"Unlock",,"unlocks"],"unlock selection"),n="",a=[],i=[{type:"icon",value:"arenaunlock",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"}],s="Get the ";if(E.includes(o[1])){if(i[0].color=colorFloatToString(D.AntiGold),n=F[o[1]]||P[o[1]],a=I[o[1]]||O[o[1]]||I.Default,r=M[o[1]]||R[o[1]],void 0===n||void 0===r)throw new TypeError(t+': error, token "'+o[1]+'" not found in itemNameToIconAtlasMap[] (or creature-, or Color or DisplayText)');s+=r}else if(k.includes(o[1])){if(i[0].color=colorFloatToString(D.TokenDefault),""===(r=(r=(b[o[1]]||"")+" / "+(C[o[1]]||"")).replace(/^\s\/\s|\s\/\s$/g,""))&&void 0===(r=U[o[1]]))throw new TypeError(t+': error, arena "'+o[1]+'" not found in arenaUnlocksGoldToDisplayName[]');s+=r+" Arenas"}else if(x.includes(o[1])){if(i[0].color=colorFloatToString(D.GreenColor),n="Kill_Slugcat",void 0===(a=D["Slugcat_"+o[1]]))throw new TypeError(t+': error, token "Slugcat_'+o[1]+'" not found in RainWorldColors[]');s+=o[1]+" character"}else{if(!N.includes(o[1]))throw new TypeError(t+': error, token "'+o[1]+'" not found in BingoEnum_ArenaUnlocks[]');if(i[0].color=colorFloatToString(D.RedColor),r=o[1].substring(0,o[1].search("-")),""===(r=(r=(b[r]||"")+" / "+(C[r]||"")).replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+o[1].substring(0,o[1].search("-"))+'" not found in regionCodeToDisplayName[]');s+=r+" Safari"}""===n?i.push({type:"text",value:o[1],color:colorFloatToString(D.Unity_white)}):i.push({type:"icon",value:n,scale:1,color:colorFloatToString(a),rotation:0});var c=Array(5);return c.fill(0),c[0]=challengeValue(t),applyShort(c,3,enumToValue(o[1],"unlocks")),c[2]=c.length-l,{name:t,category:"Getting Arena Unlocks",items:["Unlock"],values:[o[1]],description:s+" unlock.",comments:"",paint:i,toBin:new Uint8Array(c)}},BingoVistaChallenge:function(e){const t="BingoVistaChallenge";checkDescriptors(t,e.length,6,"parameter item count");var o=checkSettingbox(t,e[1],["System.String",,"Room",,"vista"],"item selection");if(e[0]!=regionOfRoom(o[1]))throw new TypeError(t+': error, region "'+e[0]+'" does not match room "'+o[1]+"\"'s region");var n=(b[e[0]]||"")+" / "+(C[e[0]]||"");if(""===(n=n.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, region "'+e[0]+'" not found in regionCodeToDisplayName[]');var a=parseInt(e[2]);if(isNaN(a)||a<0||a>r)throw new TypeError(t+': error, amount "'+e[2]+'" not a number or out of range');var i=parseInt(e[3]);if(isNaN(i)||i<0||i>r)throw new TypeError(t+': error, amount "'+e[3]+'" not a number or out of range');var s,c=q.findIndex((e=>e.room==o[1]&&e.x==a&&e.y==i));c<0?((s=Array(8)).fill(0),s[0]=challengeValue(t),s[3]=enumToValue(e[0],"regions"),applyShort(s,4,a),applyShort(s,6,i),(s=s.concat([...(new TextEncoder).encode(o[1])]))[2]=s.length-l):((s=Array(4)).fill(0),s[0]=challengeValue("BingoVistaChallenge")+1,s[3]=c+1,s[2]=s.length-l);return{name:t,category:"Visiting Vistas",items:["Region"],values:[e[0]],description:"Reach the vista point in "+n+".",comments:"Room: "+o[1]+" at x: "+String(a)+", y: "+String(i)+"; is a "+(c>=0?"stock":"customized")+" location."+getMapLink(o[1])+"<br>Note: the room names for certain Vista Points in Spearmaster/Artificer Garbage Wastes, and Rivulet Underhang, are not generated correctly for their world state, and so may not show correctly on the map; the analogous rooms are however fixed up in-game.",paint:[{type:"icon",value:"vistaicon",scale:1,color:colorFloatToString(D.Unity_white),rotation:0},{type:"break"},{type:"text",value:e[0],color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(s)}},BingoEnterRegionFromChallenge:function(e){const t="BingoEnterRegionFromChallenge";checkDescriptors(t,e.length,4,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"From",,"regionsreal"],"from region"),o=(b[r[1]]||"")+" / "+(C[r[1]]||"");if(""===(o=o.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, from-region "'+r[1]+'" not found in regionCodeToDisplayName[]');var n=checkSettingbox(t,e[1],["System.String",,"To",,"regionsreal"],"to region"),a=(b[n[1]]||"")+" / "+(C[n[1]]||"");if(""===(a=a.replace(/^\s\/\s|\s\/\s$/g,"")))throw new TypeError(t+': error, to-region "'+n[1]+'" not found in regionCodeToDisplayName[]');var i=Array(5);return i.fill(0),i[0]=challengeValue(t),i[3]=enumToValue(r[1],"regionsreal"),i[4]=enumToValue(n[1],"regionsreal"),i[2]=i.length-l,{name:t,category:"Entering a region from another region",items:[r[2],n[2]],values:[r[1],n[1]],description:"First time entering "+a+" must be from "+o+".",comments:"",paint:[{type:"text",value:r[1],color:colorFloatToString(D.Unity_white)},{type:"break"},{type:"icon",value:"keyShiftA",scale:1,color:colorFloatToString(D.EnterFrom),rotation:180},{type:"break"},{type:"text",value:n[1],color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(i)}},BingoMoonCloakChallenge:function(e){const t="BingoMoonCloakChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.Boolean",,"Deliver",,"NULL"],"delivery flag");if("true"!==r[1]&&"false"!==r[1])throw new TypeError(t+': error, delivery flag "'+r[1]+"\" not 'true' or 'false'");var o=[{type:"icon",value:"Symbol_MoonCloak",scale:1,color:colorFloatToString([.8,.8,.8]),rotation:0}];"true"===r[1]&&(o.push({type:"icon",value:"singlearrow",scale:1,color:colorFloatToString(D.Unity_white),rotation:0}),o.push({type:"icon",value:"GuidanceMoon",scale:1,color:colorFloatToString(D.GuidanceMoon),rotation:0}));var n=Array(3);return n.fill(0),n[0]=challengeValue(t),applyBool(n,1,4,r[1]),n[2]=n.length-l,{name:t,category:"Moon's Cloak",items:[r[2]],values:[r[1]],description:"false"===r[1]?"Obtain Moon's Cloak":"Deliver the Cloak to Moon",comments:"With only a 'Deliver' goal on the board, players will spawn with the Cloak in the starting shelter, and must deliver it to Looks To The Moon. If both Obtain and Deliver are present, players must obtain the Cloak from Submerged Superstructure first, and then deliver it.",paint:o,toBin:new Uint8Array(n)}},BingoBroadcastChallenge:function(e){const t="BingoBroadcastChallenge";checkDescriptors(t,e.length,3,"parameter item count");var r=checkSettingbox(t,e[0],["System.String",,"Broadcast",,"chatlogs"],"broadcast selection"),o=r[1].substring(r[1].search("_")+1);if(o.search(/[0-9]/)>=0&&(o=o.substring(0,o.search(/[0-9]/))),(o=b[o]||"")>""&&(o=" in "+o),enumToValue(r[1],"chatlogs")<=0)throw new TypeError(t+': error, chatlog "'+r[1]+'" not found in BingoEnum_Chatlogs[]');var n=Array(4);return n.fill(0),n[0]=challengeValue(t),n[3]=enumToValue(r[1],"chatlogs"),n[2]=n.length-l,{name:t,category:"Getting Chat Logs",items:["Broadcast"],values:[r[1]],description:"Get the "+r[1]+" chat log"+o,comments:"",paint:[{type:"icon",value:"Symbol_Satellite",scale:1,color:colorFloatToString(D.WhiteColor),rotation:0},{type:"break"},{type:"text",value:r[1],color:colorFloatToString(D.Unity_white)}],toBin:new Uint8Array(n)}},BingoDamageExChallenge:function(e){return u.BingoDamageChallenge(e)},BingoTameExChallenge:function(e){return u.BingoTameChallenge(e)}},h={Survivor:"The Survivor",Hunter:"The Hunter",Saint:"The Saint",Traveller:"The Wanderer",Chieftain:"The Chieftain",Monk:"The Monk",Outlaw:"The Outlaw",DragonSlayer:"The Dragon Slayer",Scholar:"The Scholar",Friend:"The Friend",Nomad:"The Nomad",Martyr:"The Martyr",Pilgrim:"The Pilgrim",Mother:"The Mother"},p=["Spear","Rock","ScavengerBomb","Lantern","GooieDuck","GlowWeed","DataPearl"],y=["FirecrackerPlant","SporePlant","FlareBomb","FlyLure","JellyFish","Lantern","Mushroom","PuffBall","ScavengerBomb","VultureMask","DangleFruit","SlimeMold"],S=["Any Weapon","Spear","Rock","ScavengerBomb","JellyFish","PuffBall","LillyPuck"],f=["FlareBomb","SporePlant","ScavengerBomb","JellyFish","DataPearl","BubbleGrass","FlyLure","SlimeMold","FirecrackerPlant","PuffBall","Mushroom","Lantern","GlowWeed","GooieDuck","FireEgg"],v=["DangleFruit","EggBugEgg","WaterNut","SlimeMold","JellyFish","Mushroom","GooieDuck","LillyPuck","DandelionPeach","GlowWeed","VultureGrub","Hazer","SmallNeedleWorm","Fly","SmallCentipede"],b={CC:"Chimney Canopy",DM:"Looks to the Moon",DS:"Drainage System",GW:"Garbage Wastes",HI:"Industrial Complex",LC:"Metropolis",LF:"Farm Arrays",LM:"Waterfront Facility",MS:"Submerged Superstructure",OE:"Outer Expanse",RM:"The Rot",SB:"Subterranean",SH:"Shaded Citadel",SI:"Sky Islands",SL:"Shoreline",SS:"Five Pebbles",SU:"Outskirts",UW:"The Exterior",VS:"Pipeyard",UNKNOWN:"UNKNOWN"},C={CC:"Solitary Towers",CL:"Silent Construct",GW:"Glacial Wasteland",HI:"Icy Monument",HR:"Rubicon",LF:"Desolate Fields",SB:"Primordial Underground",SI:"Windswept Spires",SL:"Frigid Coast",SU:"Suburban Drifts",UG:"Undergrowth",VS:"Barren Conduits"},w=["Any Region","CC","CL","DM","DS","GW","HI","HR","LC","LF","LM","MS","OE","RM","SB","SH","SI","SL","SS","SU","UG","UW","VS"],T=["Any Subregion","...","???","12th Council Pillar, the House of Braids","Ancient Labyrinth","Atop the Tallest Tower","Auxiliary Transmission Array","Barren Conduits","Bitter Aerie","Chimney Canopy","Communications Array","Depths","Desolate Canal","Desolate Fields","Drainage System","Facility Roots (Western Intake)","Farm Arrays","Filtration System","Five Pebbles","Five Pebbles (General Systems Bus)","Five Pebbles (Linear Systems Rail)","Five Pebbles (Memory Conflux)","Five Pebbles (Primary Cortex)","Five Pebbles (Recursive Transform Array)","Five Pebbles (Unfortunate Development)","Forgotten Conduit","Frigid Coast","Frosted Cathedral","Frozen Mast","Garbage Wastes","Glacial Wasteland","Icy Monument","Industrial Complex","Journey's End","Looks to the Moon","Looks to the Moon (Abstract Convergence Manifold)","Looks to the Moon (Memory Conflux)","Looks to the Moon (Neural Terminus)","Looks to the Moon (Vents)","Luna","Memory Crypts","Metropolis","Outer Expanse","Outskirts","Pipeyard","Primordial Underground","Shaded Citadel","Shoreline","Silent Construct","Sky Islands","Solitary Towers","Struts","Submerged Superstructure","Submerged Superstructure (The Heart)","Submerged Superstructure (Vents)","Subterranean","Suburban Drifts","Sump Tunnel","Sunken Pier","The Floor","The Gutter","The Husk","The Leg","The Precipice","The Rot","The Rot (Cystic Conduit)","The Rot (Depths)","The Shell","The Wall","Undergrowth","Underhang","Waterfront Facility","Windswept Spires"],B=["Hazer","VultureGrub","SmallNeedleWorm","TubeWorm","SmallCentipede","Snail","LanternMouse"],_=["JetFish","Hazer","VultureGrub","CicadaA","CicadaB","Yeek"],L=["su_c02","gw_c05","gw_c11","lf_e03","ug_toll"],E=["AquaCenti","BigCentipede","BigEel","BigJelly","BigNeedleWorm","BigSpider","BlackLizard","BlueLizard","BrotherLongLegs","BubbleGrass","Centiwing","CicadaA","CyanLizard","DaddyLongLegs","DandelionPeach","DangleFruit","Deer","DropBug","EelLizard","EggBug","ElectricSpear","FireSpear","FirecrackerPlant","FlareBomb","FlyLure","GlowWeed","GooieDuck","Hazer","Inspector","JellyFish","JetFish","JungleLeech","KingVulture","Lantern","LanternMouse","Leech","LillyPuck","MirosBird","MirosVulture","MotherSpider","Mushroom","Pearl","PoleMimic","PuffBall","RedCentipede","RedLizard","Salamander","Scavenger","ScavengerBomb","ScavengerElite","SeaLeech","SingularityBomb","SlimeMold","SlugNPC","SmallCentipede","Snail","Spider","SpitLizard","SpitterSpider","SporePlant","TentaclePlant","TerrorLongLegs","TubeWorm","Vulture","VultureGrub","VultureMask","WaterNut","WhiteLizard","Yeek","YellowLizard","ZoopLizard"],k=["CC","CL","DM","DS","GW","GWold","HI","LC","LF","LM","MS","OE","RM","SB","SH","SI","SL","SU","UG","UW","VS","filter","gutter"],U={GWold:"Past Garbage Wastes",filter:"Filtration System",gutter:"The Gutter"},x=["Artificer","Gourmand","Rivulet","Saint","Spearmaster"],N=["CC-safari","CL-safari","DM-safari","DS-safari","GW-safari","HI-safari","LC-safari","LF-safari","LM-safari","MS-safari","OE-safari","RM-safari","SB-safari","SH-safari","SI-safari","SL-safari","SS-safari","SU-safari","UG-safari","UW-safari","VS-safari"];var A=E.concat(k).concat(N).concat(x);const D={AntiGold:[.2245,.519817,.8355],GoldHSL:[.8355,.540183,.2245],GoldRGB:[.529,.365,.184],SaturatedGold:[1,.73,.368],MapColor:[.381333,.32,.48],RedColor:[1,0,0],GreenColor:[.265234,.8355,.2245],WhiteColor:[.53,.53,.53],DevColor:[.8648,0,.94],TokenDefault:[1,.6,.05],Slugcat_White:[1,1,1],Slugcat_Yellow:[1,1,.45098],Slugcat_Red:[1,.45098,.45098],Slugcat_Night:[.092,.1388,.308],Slugcat_Sofanthiel:[.09,.14,.31],Slugcat_Rivulet:[.56863,.8,.94118],Slugcat_Artificer:[.43922,.13725,.23529],Slugcat_Saint:[.66667,.9451,.33725],Slugcat_Spear:[.31,.18,.41],Slugcat_Spearmaster:[.31,.18,.41],Slugcat_Gourmand:[.94118,.75686,.59216],Unity_red:[1,0,0],Unity_green:[0,1,0],Unity_blue:[0,0,1],Unity_white:[1,1,1],Unity_black:[0,0,0],Unity_yellow:[1,.921569,.0156863],Unity_cyan:[0,1,1],Unity_magenta:[1,0,1],Unity_gray:[.5,.5,.5],Unity_grey:[.5,.5,.5],ExpHidden:[1,.75,.1],GuidanceNeuron:[0,1,.3],GuidanceMoon:[1,.8,.3],nomscpebble:[.447059,.901961,.768627],popcorn_plant:[.41,.16,.23],EnterFrom:[.258823,.529412,1]},M={Slugcat:"Slugcats",GreenLizard:"Green Lizards",PinkLizard:"Pink Lizards",BlueLizard:"Blue Lizards",CyanLizard:"Cyan Lizards",RedLizard:"Red Lizards",WhiteLizard:"White Lizards",BlackLizard:"Black Lizards",YellowLizard:"Yellow Lizards",Salamander:"Salamanders",Scavenger:"Scavengers",Vulture:"Vultures",KingVulture:"King Vultures",CicadaA:"White Squidcadas",CicadaB:"Black Squidcadas",Snail:"Snails",Centiwing:"Centiwings",SmallCentipede:"Small Centipedes",Centipede:"Large Centipedes",BigCentipede:"Overgrown Centipedes",RedCentipede:"Red Centipedes",BrotherLongLegs:"Brother Long Legs",DaddyLongLegs:"Daddy Long Legs",LanternMouse:"Lantern Mice",GarbageWorm:"Garbage Worms",Fly:"Batflies",Leech:"Leeches",SeaLeech:"Sea Leeches",JetFish:"Jetfish",BigEel:"Leviathans",Deer:"Rain Deer",TubeWorm:"Tube Worms",Spider:"Coalescipedes",BigSpider:"Large Spiders",SpitterSpider:"Spitter Spiders",MirosBird:"Miros Birds",TentaclePlant:"Monster Kelp",PoleMimic:"Pole Mimics",Overseer:"Overseers",VultureGrub:"Vulture Grubs",EggBug:"Egg Bugs",BigNeedleWorm:"Large Noodleflies",SmallNeedleWorm:"Baby Noodleflies",DropBug:"Dropwigs",Hazer:"Hazers",TrainLizard:"Train Lizards",ZoopLizard:"Strawberry Lizards",EelLizard:"Eel Lizards",JungleLeech:"Jungle Leeches",TerrorLongLegs:"Terror Long Legs",MotherSpider:"Mother Spiders",StowawayBug:"Stowaway Bugs",HunterDaddy:"Hunter Long Legs",FireBug:"Firebugs",AquaCenti:"Aquapedes",MirosVulture:"Miros Vultures",ScavengerElite:"Elite Scavengers",ScavengerKing:"King Scavengers",SpitLizard:"Caramel Lizards",Inspector:"Inspectors",Yeek:"Yeeks",BigJelly:"Large Jellyfish",SlugNPC:"Slugpups",Default:"Unknown Creatures"},F={Slugcat:"Kill_Slugcat",GreenLizard:"Kill_Green_Lizard",PinkLizard:"Kill_Standard_Lizard",BlueLizard:"Kill_Standard_Lizard",CyanLizard:"Kill_Standard_Lizard",RedLizard:"Kill_Standard_Lizard",WhiteLizard:"Kill_White_Lizard",BlackLizard:"Kill_Black_Lizard",YellowLizard:"Kill_Yellow_Lizard",Salamander:"Kill_Salamander",Scavenger:"Kill_Scavenger",Vulture:"Kill_Vulture",KingVulture:"Kill_KingVulture",CicadaA:"Kill_Cicada",CicadaB:"Kill_Cicada",Snail:"Kill_Snail",Centiwing:"Kill_Centiwing",SmallCentipede:"Kill_Centipede1",Centipede:"Kill_Centipede2",BigCentipede:"Kill_Centipede3",RedCentipede:"Kill_Centipede3",BrotherLongLegs:"Kill_Daddy",DaddyLongLegs:"Kill_Daddy",LanternMouse:"Kill_Mouse",GarbageWorm:"Kill_Garbageworm",Fly:"Kill_Bat",Leech:"Kill_Leech",SeaLeech:"Kill_Leech",JetFish:"Kill_Jetfish",BigEel:"Kill_BigEel",Deer:"Kill_RainDeer",TubeWorm:"Kill_Tubeworm",Spider:"Kill_SmallSpider",BigSpider:"Kill_BigSpider",SpitterSpider:"Kill_BigSpider",MirosBird:"Kill_MirosBird",TentaclePlant:"Kill_TentaclePlant",PoleMimic:"Kill_PoleMimic",Overseer:"Kill_Overseer",VultureGrub:"Kill_VultureGrub",EggBug:"Kill_EggBug",BigNeedleWorm:"Kill_NeedleWorm",SmallNeedleWorm:"Kill_SmallNeedleWorm",DropBug:"Kill_DropBug",Hazer:"Kill_Hazer",TrainLizard:"Kill_Standard_Lizard",ZoopLizard:"Kill_White_Lizard",EelLizard:"Kill_Salamander",JungleLeech:"Kill_Leech",TerrorLongLegs:"Kill_Daddy",MotherSpider:"Kill_BigSpider",StowawayBug:"Kill_Stowaway",HunterDaddy:"Kill_Slugcat",FireBug:"Kill_FireBug",AquaCenti:"Kill_Centiwing",MirosVulture:"Kill_MirosBird",ScavengerElite:"Kill_ScavengerElite",ScavengerKing:"Kill_ScavengerKing",SpitLizard:"Kill_Spit_Lizard",Inspector:"Kill_Inspector",Yeek:"Kill_Yeek",BigJelly:"Kill_BigJellyFish",SlugNPC:"Kill_Slugcat",Default:"Futile_White"},I={Slugcat:[1,1,1],GreenLizard:[.2,1,0],PinkLizard:[1,0,1],BlueLizard:[0,.5,1],CyanLizard:[0,.909804,.901961],RedLizard:[.901961,.054902,.054902],WhiteLizard:[1,1,1],BlackLizard:[.368627,.368627,.435294],YellowLizard:[1,.6,0],Salamander:[.933333,.780392,.894118],Vulture:[.831373,.792157,.435294],KingVulture:[.831373,.792157,.435294],CicadaA:[1,1,1],CicadaB:[.368627,.368627,.435294],Centiwing:[.054902,.698039,.235294],SmallCentipede:[1,.6,0],Centipede:[1,.6,0],BigCentipede:[1,.6,0],RedCentipede:[.901961,.054902,.054902],BrotherLongLegs:[.454902,.52549,.305882],DaddyLongLegs:[0,0,1],Leech:[.682353,.156863,.117647],SeaLeech:[.05,.3,.7],TubeWorm:[.05,.3,.7],SpitterSpider:[.682353,.156863,.117647],Overseer:[0,.909804,.901961],VultureGrub:[.831373,.792157,.435294],EggBug:[0,1,.470588],BigNeedleWorm:[1,.596078,.596078],SmallNeedleWorm:[1,.596078,.596078],Hazer:[.211765,.792157,.388235],TrainLizard:[.3,0,1],ZoopLizard:[.95,.73,.73],EelLizard:[.02,.780392,.2],JungleLeech:[.1,.7,.1],TerrorLongLegs:[.3,0,1],MotherSpider:[.1,.7,.1],StowawayBug:[.368627,.368627,.435294],HunterDaddy:[.8,.470588,.470588],FireBug:[1,.470588,.470588],AquaCenti:[0,0,1],MirosVulture:[.901961,.054902,.054902],SpitLizard:[.55,.4,.2],Inspector:[.447059,.901961,.768627],Yeek:[.9,.9,.9],BigJelly:[1,.85,.7],Default:[.66384,.6436,.6964]},R={FirecrackerPlant:"Firecracker Plants",FlareBomb:"Flare Bombs",FlyLure:"Fly Lures",JellyFish:"Jellyfish",Lantern:"Scavenger Lanterns",Mushroom:"Mushrooms",PuffBall:"Puff Balls",ScavengerBomb:"Scavenger Bombs",VultureMask:"Vulture Masks",VultureMask1:"King Vulture Masks",VultureMask2:"Chieftan Masks",Spear:"Spears",Spear1:"Explosive Spears",Spear2:"Electric Spears",Spear3:"Fire Spears",Rock:"Rocks",SporePlant:"Bee Hives",DataPearl:"Pearls",DangleFruit:"Blue Fruit",EggBugEgg:"Eggbug Eggs",WaterNut:"Bubble Fruit",SlimeMold:"Slime Mold",BubbleGrass:"Bubble Grass",GlowWeed:"Glow Weed",DandelionPeach:"Dandelion Peaches",LillyPuck:"Lillypucks",GooieDuck:"Gooieducks",NeedleEgg:"Noodlefly Eggs",OverseerCarcass:"Overseer Eyes",KarmaFlower:"Karma Flowers",ElectricSpear:"Electric Spears",FireSpear:"Fire Spears",Pearl:"Pearls",SLOracleSwarmer:"Neuron Flies",SSOracleSwarmer:"Neuron Flies",NSHSwarmer:"Green Neuron Flies",PebblesPearl:"Pearls",HalcyonPearl:"Pearls",Spearmasterpearl:"Pearls",EnergyCell:"Rarefaction Cells",SingularityBomb:"Singularity Bombs",MoonCloak:"Moon's Cloak",FireEgg:"Firebug Eggs",JokeRifle:"Joke Rifles",Seed:"Popcorn Seeds",Default:"Unknown Items"},P={Rock:"Symbol_Rock",SporePlant:"Symbol_SporePlant",FirecrackerPlant:"Symbol_Firecracker",ScavengerBomb:"Symbol_StunBomb",Spear:"Symbol_Spear",Spear1:"Symbol_FireSpear",Spear2:"Symbol_ElectricSpear",Spear3:"Symbol_HellSpear",Lantern:"Symbol_Lantern",FlareBomb:"Symbol_FlashBomb",PuffBall:"Symbol_PuffBall",SlimeMold:"Symbol_SlimeMold",BubbleGrass:"Symbol_BubbleGrass",DangleFruit:"Symbol_DangleFruit",Mushroom:"Symbol_Mushroom",WaterNut:"Symbol_WaterNut",EggBugEgg:"Symbol_EggBugEgg",FlyLure:"Symbol_FlyLure",JellyFish:"Symbol_JellyFish",VultureMask:"Kill_Vulture",VultureMask1:"Kill_KingVulture",VultureMask2:"Symbol_ChieftainMask",SLOracleSwarmer:"Symbol_Neuron",SSOracleSwarmer:"Symbol_Neuron",NSHSwarmer:"Symbol_Neuron",NeedleEgg:"needleEggSymbol",OverseerCarcass:"Kill_Overseer",PebblesPearl:"Symbol_Pearl",DataPearl:"Symbol_Pearl",HalcyonPearl:"Symbol_Pearl",Spearmasterpearl:"Symbol_Pearl",EnergyCell:"Symbol_EnergyCell",SingularityBomb:"Symbol_Singularity",GooieDuck:"Symbol_GooieDuck",LillyPuck:"Symbol_LillyPuck",GlowWeed:"Symbol_GlowWeed",DandelionPeach:"Symbol_DandelionPeach",MoonCloak:"Symbol_MoonCloak",FireEgg:"Symbol_FireEgg",JokeRifle:"Symbol_JokeRifle",Seed:"Symbol_Seed",Default:"Futile_White",FireSpear:"Symbol_FireSpear",ElectricSpear:"Symbol_ElectricSpear",Pearl:"Symbol_Pearl"},G=[,,"Misc","Misc2","CC","SI_west","SI_top","LF_west","LF_bottom","HI","SH","DS","SB_filtration","SB_ravine","GW","SL_bridge","SL_moon","SU","UW","PebblesPearl","SL_chimney","Red_stomach","Spearmasterpearl","SU_filt","SI_chat3","SI_chat4","SI_chat5","DM","LC","OE","MS","RM","Rivulet_stomach","LC_second","CL","VS","BroadcastMisc"],W={CC:"Gold",DS:"Bright Green",GW:"Viridian",HI:"Bright Blue",LF_bottom:"Bright Red",LF_west:"Deep Pink",SH:"Deep Magenta",SI_chat3:"Dark Purple",SI_chat4:"Olive Green",SI_chat5:"Dark Magenta",SI_top:"Dark Blue",SI_west:"Dark Green",SL_bridge:"Bright Purple",SL_chimney:"Bright Magenta",SL_moon:"Pale Yellow",SB_filtration:"Teal",SB_ravine:"Dark Magenta",SU:"Light Blue",UW:"Pale Green",VS:"Deep Purple",CL:"Music (faded)",DM:"Light Yellow",LC:"Deep Green",LC_second:"Bronze",MS:"Dull Yellow",OE:"Light Purple",Red_stomach:"Aquamarine",Rivulet_stomach:"Celadon",RM:"Music",Spearmasterpearl:"Dark Red",SU_filt:"Light Pink",BroadcastMisc:"Broadcast",Misc:"Misc",Misc2:"Misc 2",PebblesPearl:"Active Processes"},z={CC:"CC",DS:"DS",GW:"GW",HI:"HI",LF_bottom:"LF",LF_west:"LF",SH:"SH",SI_chat3:"SI",SI_chat4:"SI",SI_chat5:"SI",SI_top:"SI",SI_west:"SI",SL_bridge:"SL",SL_chimney:"SL",SL_moon:"SL",SB_filtration:"SB",SB_ravine:"SB",SU:"SU",UW:"UW",VS:"VS",CL:"CL",DM:"MS",LC:"LC",LC_second:"LC",MS:"GW",OE:"OE",RM:"RM",SU_filt:"SU",BroadcastMisc:"UNKNOWN",Misc:"UNKNOWN",Misc2:"UNKNOWN",PebblesPearl:"UNKNOWN",Red_stomach:"UNKNOWN",Rivulet_stomach:"UNKNOWN",Spearmasterpearl:"UNKNOWN"},V={Misc:[.745,.745,.745],Misc2:[.745,.745,.745],CC:[.95,.8,.1],SI_west:[.05125,.2575,.175],SI_top:[.05125,.175,.2575],LF_west:[1,.15,.405],LF_bottom:[1,.235,.235],HI:[.131863,.356863,1],SH:[.52,.08,.316],DS:[.15,.745,.235],SB_filtration:[.235,.575,.575],SB_ravine:[.2575,.05125,.175],GW:[.125,.775,.5625],SL_bridge:[.58,.208,.93],SL_moon:[.915,.9575,.32],SU:[.575,.66,.915],UW:[.49,.642,.49],PebblesPearl:[.745,.745,.745],SL_chimney:[1,.105,.7075],Red_stomach:[.6,1,.9],Spearmasterpearl:[.496,.01,.04],SU_filt:[1,.7875,.915],SI_chat3:[.175,.05125,.2575],SI_chat4:[.175,.2575,.05125],SI_chat5:[.2575,.05125,.175],DM:[.963333,.933333,.326667],LC:[.15,.49,.1636],OE:[.616667,.463333,.83],MS:[.843333,.91,.38],RM:[.692157,.184314,.984314],Rivulet_stomach:[.65,.89,.683333],LC_second:[.76,.4,0],CL:[.742157,.284314,1],VS:[.765,.05,.96],BroadcastMisc:[.911111,.775,.822222]},O={Default:[.66384,.6436,.6964],SporePlant:[.682353,.156862,.117647],FirecrackerPlant:[.682353,.156862,.117647],ScavengerBomb:[.90196,.054902,.054902],Spear1:[.90196,.054902,.054902],Spear2:[0,0,1],Spear3:[1,.470588,.470588],Lantern:[1,.572549,.317647],FlareBomb:[.733333,.682353,1],SlimeMold:[1,.6,0],BubbleGrass:[.054902,.698039,.235294],DangleFruit:[0,0,1],Mushroom:[1,1,1],WaterNut:[.05,.3,.7],EggBugEgg:[0,1,.470588],FlyLure:[.678431,.266667,.211765],SSOracleSwarmer:[1,1,1],NSHSwarmer:[0,1,.3],NeedleEgg:[.57647,.160784,.25098],PebblesPearl1:[.7,.7,.7],PebblesPearl2:[.2944,.276,.324],PebblesPearl3:[1,.478431,.007843],PebblesPearl:[0,.454902,.639216],DataPearl:[.7,.7,.7],HalcyonPearl:[.7,.7,.7],DataPearl1:[1,.6,.9],Spearmasterpearl:[.5325,.1585,.184],EnergyCell:[.01961,.6451,.85],SingularityBomb:[.01961,.6451,.85],GooieDuck:[.447059,.90196,.768627],LillyPuck:[.170588,.96196,.998627],GlowWeed:[.947059,1,.268627],DandelionPeach:[.59,.78,.96],MoonCloak:[.95,1,.96],FireEgg:[1,.470588,.470588],ElectricSpear:[0,0,1],FireSpear:[.90196,.054902,.054902],Pearl:[.7,.7,.7],Pearl_Misc:[.745,.745,.745],Pearl_Misc2:[.745,.745,.745],Pearl_CC:[.95,.8,.1],Pearl_SI_west:[.05125,.2575,.175],Pearl_SI_top:[.05125,.175,.2575],Pearl_LF_west:[1,.15,.405],Pearl_LF_bottom:[1,.235,.235],Pearl_HI:[.131863,.356863,1],Pearl_SH:[.52,.08,.316],Pearl_DS:[.15,.745,.235],Pearl_SB_filtration:[.235,.575,.575],Pearl_SB_ravine:[.2575,.05125,.175],Pearl_GW:[.125,.775,.5625],Pearl_SL_bridge:[.58,.208,.93],Pearl_SL_moon:[.915,.9575,.32],Pearl_SU:[.575,.66,.915],Pearl_UW:[.49,.642,.49],Pearl_PebblesPearl:[.745,.745,.745],Pearl_SL_chimney:[1,.105,.7075],Pearl_Red_stomach:[.6,1,.9],Pearl_Spearmasterpearl:[.496,.01,.04],Pearl_SU_filt:[1,.7875,.915],Pearl_SI_chat3:[.175,.05125,.2575],Pearl_SI_chat4:[.175,.2575,.05125],Pearl_SI_chat5:[.2575,.05125,.175],Pearl_DM:[.963333,.933333,.326667],Pearl_LC:[.15,.49,.1636],Pearl_OE:[.616667,.463333,.83],Pearl_MS:[.843333,.91,.38],Pearl_RM:[.692157,.184314,.984314],Pearl_Rivulet_stomach:[.65,.89,.683333],Pearl_LC_second:[.76,.4,0],Pearl_CL:[.742157,.284314,1],Pearl_VS:[.765,.05,.96],Pearl_BroadcastMisc:[.911111,.775,.822222]},H=["Yellow","White","Red","Gourmand","Artificer","Rivulet","Spear","Saint","Sofanthiel","Night"],K={Yellow:"Monk",White:"Survivor",Red:"Hunter",Gourmand:"Gourmand",Artificer:"Artificer",Rivulet:"Rivulet",Spear:"Spearmaster",Saint:"Saint",Sofanthiel:"Inv",Night:"Nightcat"},J={LANTERN:1,MASK:2,BOMB:4,NEURON:8,BACKSPEAR:16,FLOWER:32,PASSAGE:64,SLOWTIME:128,SINGUBOMB:256,ELECSPEAR:512,DUALWIELD:1024,EXPRESIST:2048,EXPJUMP:4096,CRAFTING:8192,AGILITY:16384,RIFLE:32768,BLINDED:65536,DOOMED:131072,HUNTED:262144,PURSUED:524288,AURA:1048576,LOCKOUT:2097152,BLACKOUT:4194304},j={LANTERN:"Perk: Scavenger Lantern",MASK:"Perk: Vulture Mask",BOMB:"Perk: Scavenger Bomb",NEURON:"Perk: Neuron Glow",BACKSPEAR:"Perk: Back Spear",FLOWER:"Perk: Karma Flower",PASSAGE:"Perk: Enable Passages",SLOWTIME:"Perk: Slow Time",SINGUBOMB:"Perk: Singularity Bomb",ELECSPEAR:"Perk: Electric Spear",DUALWIELD:"Perk: Spear Dual-Wielding",EXPRESIST:"Perk: Explosion Resistance",EXPJUMP:"Perk: Explosive Jump",CRAFTING:"Perk: Item Crafting",AGILITY:"Perk: High Agility",RIFLE:"Perk: Joke Rifle",BLINDED:"Burden: Blinded",DOOMED:"Burden: Doomed",HUNTED:"Burden: Hunted",PURSUED:"Burden: Pursued",AURA:"Aura Enabled",LOCKOUT:"Gameplay: Lockout",BLACKOUT:"Gameplay: Blackout"},q=[{region:"CC",room:"CC_A10",x:734,y:506},{region:"CC",room:"CC_B12",x:455,y:1383},{region:"CC",room:"CC_C05",x:449,y:2330},{region:"CL",room:"CL_C05",x:540,y:1213},{region:"CL",room:"CL_H02",x:2407,y:1649},{region:"CL",room:"CL_CORE",x:471,y:373},{region:"DM",room:"DM_LAB1",x:486,y:324},{region:"DM",room:"DM_LEG06",x:400,y:388},{region:"DM",room:"DM_O02",x:2180,y:2175},{region:"DS",room:"DS_A05",x:172,y:490},{region:"DS",room:"DS_A19",x:467,y:545},{region:"DS",room:"DS_C02",x:541,y:1305},{region:"GW",room:"GW_C09",x:607,y:595},{region:"GW",room:"GW_D01",x:1603,y:595},{region:"GW",room:"GW_E02",x:2608,y:621},{region:"HI",room:"HI_B04",x:214,y:615},{region:"HI",room:"HI_C04",x:800,y:768},{region:"HI",room:"HI_D01",x:1765,y:655},{region:"LC",room:"LC_FINAL",x:2700,y:500},{region:"LC",room:"LC_SUBWAY01",x:1693,y:564},{region:"LC",room:"LC_tallestconnection",x:153,y:242},{region:"LF",room:"LF_A10",x:421,y:412},{region:"LF",room:"LF_C01",x:2792,y:423},{region:"LF",room:"LF_D02",x:1220,y:631},{region:"OE",room:"OE_RAIL01",x:2420,y:1378},{region:"OE",room:"OE_RUINCourtYard",x:2133,y:1397},{region:"OE",room:"OE_TREETOP",x:468,y:1782},{region:"RM",room:"RM_ASSEMBLY",x:1550,y:586},{region:"RM",room:"RM_CONVERGENCE",x:1860,y:670},{region:"RM",room:"RM_I03",x:276,y:2270},{region:"SB",room:"SB_D04",x:483,y:1045},{region:"SB",room:"SB_E04",x:1668,y:567},{region:"SB",room:"SB_H02",x:1559,y:472},{region:"SH",room:"SH_A14",x:273,y:556},{region:"SH",room:"SH_B05",x:733,y:453},{region:"SH",room:"SH_C08",x:2159,y:481},{region:"SI",room:"SI_C07",x:539,y:2354},{region:"SI",room:"SI_D05",x:1045,y:1258},{region:"SI",room:"SI_D07",x:200,y:400},{region:"SL",room:"SL_B01",x:389,y:1448},{region:"SL",room:"SL_B04",x:390,y:2258},{region:"SL",room:"SL_C04",x:542,y:1295},{region:"SU",room:"SU_A04",x:265,y:415},{region:"SU",room:"SU_B12",x:1180,y:382},{region:"SU",room:"SU_C01",x:450,y:1811},{region:"UG",room:"UG_A16",x:640,y:354},{region:"UG",room:"UG_D03",x:857,y:1826},{region:"UG",room:"UG_GUTTER02",x:163,y:241},{region:"UW",room:"UW_A07",x:805,y:616},{region:"UW",room:"UW_C02",x:493,y:490},{region:"UW",room:"UW_J01",x:860,y:1534},{region:"VS",room:"VS_C03",x:82,y:983},{region:"VS",room:"VS_F02",x:1348,y:533},{region:"VS",room:"VS_H02",x:603,y:3265},{region:"CC",room:"CC_SHAFT0x",x:1525,y:217},{region:"CL",room:"CL_C03",x:808,y:37},{region:"DM",room:"DM_VISTA",x:956,y:341},{region:"DS",room:"DS_GUTTER02",x:163,y:241},{region:"GW",room:"GW_A24",x:590,y:220},{region:"HI",room:"HI_B02",x:540,y:1343},{region:"LC",room:"LC_stripmallNEW",x:1285,y:50},{region:"LF",room:"LF_E01",x:359,y:63},{region:"LM",room:"LM_B01",x:248,y:1507},{region:"LM",room:"LM_B04",x:503,y:2900},{region:"LM",room:"LM_C04",x:542,y:129},{region:"LM",room:"LM_EDGE02",x:1750,y:1715},{region:"MS",room:"MS_AIR03",x:1280,y:770},{region:"MS",room:"MS_ARTERY01",x:4626,y:39},{region:"MS",room:"MS_FARSIDE",x:2475,y:1800},{region:"MS",room:"MS_LAB4",x:390,y:240},{region:"OE",room:"OE_CAVE02",x:1200,y:35},{region:"RM",room:"RM_LAB8",x:1924,y:65},{region:"SB",room:"SB_C02",x:1155,y:550},{region:"SH",room:"SH_E02",x:770,y:40},{region:"SI",room:"SI_C04",x:1350,y:130},{region:"SL",room:"SL_AI",x:1530,y:15},{region:"SS",room:"SS_A13",x:347,y:595},{region:"SS",room:"SS_C03",x:60,y:119},{region:"SS",room:"SS_D04",x:980,y:440},{region:"SS",room:"SS_LAB12",x:697,y:255},{region:"SU",room:"SU_B11",x:770,y:48},{region:"UG",room:"UG_A19",x:545,y:43},{region:"UW",room:"UW_D05",x:760,y:220},{region:"VS",room:"VS_E06",x:298,y:1421},{region:"LM",room:"LM_C04",x:542,y:1295}],Y={creatures:["Any Creature"].concat(Object.keys(M)),items:Object.keys(R),pearls:G.slice(2),depths:B,expobject:y,craft:f,banitem:v.concat(["Lantern","PuffBall","VultureMask","ScavengerBomb","FirecrackerPlant","BubbleGrass","Rock"]),food:v,theft:p,friend:["CicadaA","CicadaB","GreenLizard","PinkLizard","YellowLizard","BlackLizard","CyanLizard","WhiteLizard","BlueLizard","EelLizard","SpitLizard","ZoopLizard","Salamander","RedLizard"],transport:_,tolls:L,pinnable:["CicadaA","CicadaB","Scavenger","BlackLizard","PinkLizard","BlueLizard","YellowLizard","WhiteLizard","GreenLizard","Salamander","Dropbug","Snail","Centipede","Centiwing","LanternMouse"],weapons:S,weaponsnojelly:S,regions:w,regionsreal:w,subregions:T,echoes:w,unlocks:A,passage:Object.keys(h),characters:H,EXPFLAGS:Object.keys(J),challenges:["BingoChallenge","BingoAchievementChallenge","BingoAllRegionsExcept","BingoBombTollChallenge","BingoCollectPearlChallenge","BingoCraftChallenge","BingoCreatureGateChallenge","BingoCycleScoreChallenge","BingoDamageChallenge","BingoDepthsChallenge","BingoDodgeLeviathanChallenge","BingoDontUseItemChallenge","BingoEatChallenge","BingoEchoChallenge","BingoEnterRegionChallenge","BingoGlobalScoreChallenge","BingoGreenNeuronChallenge","BingoHatchNoodleChallenge","BingoHellChallenge","BingoItemHoardChallenge","BingoKarmaFlowerChallenge","BingoKillChallenge","BingoMaulTypesChallenge","BingoMaulXChallenge","BingoNeuronDeliveryChallenge","BingoNoNeedleTradingChallenge","BingoNoRegionChallenge","BingoPearlDeliveryChallenge","BingoPearlHoardChallenge","BingoPinChallenge","BingoPopcornChallenge","BingoRivCellChallenge","BingoSaintDeliveryChallenge","BingoSaintPopcornChallenge","BingoStealChallenge","BingoTameChallenge","BingoTradeChallenge","BingoTradeTradedChallenge","BingoTransportChallenge","BingoUnlockChallenge","BingoVistaChallenge","BingoEnterRegionFromChallenge","BingoMoonCloakChallenge","BingoBroadcastChallenge","BingoDamageExChallenge","BingoTameExChallenge"],boolean:["false","true"],vista_code:["CC><System.String|CC_A10|Room|0|vista><734><506","CC><System.String|CC_B12|Room|0|vista><455><1383","CC><System.String|CC_C05|Room|0|vista><449><2330","CL><System.String|CL_C05|Room|0|vista><540><1213","CL><System.String|CL_H02|Room|0|vista><2407><1649","CL><System.String|CL_CORE|Room|0|vista><471><373","DM><System.String|DM_LAB1|Room|0|vista><486><324","DM><System.String|DM_LEG06|Room|0|vista><400><388","DM><System.String|DM_O02|Room|0|vista><2180><2175","DS><System.String|DS_A05|Room|0|vista><172><490","DS><System.String|DS_A19|Room|0|vista><467><545","DS><System.String|DS_C02|Room|0|vista><541><1305","GW><System.String|GW_C09|Room|0|vista><607><595","GW><System.String|GW_D01|Room|0|vista><1603><595","GW><System.String|GW_E02|Room|0|vista><2608><621","HI><System.String|HI_B04|Room|0|vista><214><615","HI><System.String|HI_C04|Room|0|vista><800><768","HI><System.String|HI_D01|Room|0|vista><1765><655","LC><System.String|LC_FINAL|Room|0|vista><2700><500","LC><System.String|LC_SUBWAY01|Room|0|vista><1693><564","LC><System.String|LC_tallestconnection|Room|0|vista><153><242","LF><System.String|LF_A10|Room|0|vista><421><412","LF><System.String|LF_C01|Room|0|vista><2792><423","LF><System.String|LF_D02|Room|0|vista><1220><631","OE><System.String|OE_RAIL01|Room|0|vista><2420><1378","OE><System.String|OE_RUINCourtYard|Room|0|vista><2133><1397","OE><System.String|OE_TREETOP|Room|0|vista><468><1782","RM><System.String|RM_ASSEMBLY|Room|0|vista><1550><586","RM><System.String|RM_CONVERGENCE|Room|0|vista><1860><670","RM><System.String|RM_I03|Room|0|vista><276><2270","SB><System.String|SB_D04|Room|0|vista><483><1045","SB><System.String|SB_E04|Room|0|vista><1668><567","SB><System.String|SB_H02|Room|0|vista><1559><472","SH><System.String|SH_A14|Room|0|vista><273><556","SH><System.String|SH_B05|Room|0|vista><733><453","SH><System.String|SH_C08|Room|0|vista><2159><481","SI><System.String|SI_C07|Room|0|vista><539><2354","SI><System.String|SI_D05|Room|0|vista><1045><1258","SI><System.String|SI_D07|Room|0|vista><200><400","SL><System.String|SL_B01|Room|0|vista><389><1448","SL><System.String|SL_B04|Room|0|vista><390><2258","SL><System.String|SL_C04|Room|0|vista><542><1295","SU><System.String|SU_A04|Room|0|vista><265><415","SU><System.String|SU_B12|Room|0|vista><1180><382","SU><System.String|SU_C01|Room|0|vista><450><1811","UG><System.String|UG_A16|Room|0|vista><640><354","UG><System.String|UG_D03|Room|0|vista><857><1826","UG><System.String|UG_GUTTER02|Room|0|vista><163><241","UW><System.String|UW_A07|Room|0|vista><805><616","UW><System.String|UW_C02|Room|0|vista><493><490","UW><System.String|UW_J01|Room|0|vista><860><1534","VS><System.String|VS_C03|Room|0|vista><82><983","VS><System.String|VS_F02|Room|0|vista><1348><533","VS><System.String|VS_H02|Room|0|vista><603><3265","CC><System.String|CC_SHAFT0x|Room|0|vista><1525><217","CL><System.String|CL_C03|Room|0|vista><808><37","DM><System.String|DM_VISTA|Room|0|vista><956><341","DS><System.String|DS_GUTTER02|Room|0|vista><163><241","GW><System.String|GW_A24|Room|0|vista><590><220","HI><System.String|HI_B02|Room|0|vista><540><1343","LC><System.String|LC_stripmallNEW|Room|0|vista><1285><50","LF><System.String|LF_E01|Room|0|vista><359><63","LM><System.String|LM_B01|Room|0|vista><248><1507","LM><System.String|LM_B04|Room|0|vista><503><2900","LM><System.String|LM_C04|Room|0|vista><542><129","LM><System.String|LM_EDGE02|Room|0|vista><1750><1715","MS><System.String|MS_AIR03|Room|0|vista><1280><770","MS><System.String|MS_ARTERY01|Room|0|vista><4626><39","MS><System.String|MS_FARSIDE|Room|0|vista><2475><1800","MS><System.String|MS_LAB4|Room|0|vista><390><240","OE><System.String|OE_CAVE02|Room|0|vista><1200><35","RM><System.String|RM_LAB8|Room|0|vista><1924><65","SB><System.String|SB_C02|Room|0|vista><1155><550","SH><System.String|SH_E02|Room|0|vista><770><40","SI><System.String|SI_C04|Room|0|vista><1350><130","SL><System.String|SL_AI|Room|0|vista><1530><15","SS><System.String|SS_A13|Room|0|vista><347><595","SS><System.String|SS_C03|Room|0|vista><60><119","SS><System.String|SS_D04|Room|0|vista><980><440","SS><System.String|SS_LAB12|Room|0|vista><697><255","SU><System.String|SU_B11|Room|0|vista><770><48","UG><System.String|UG_A19|Room|0|vista><545><43","UW><System.String|UW_D05|Room|0|vista><760><220","VS><System.String|VS_E06|Room|0|vista><298><142","LM><System.String|LM_C04|Room|0|vista><542><1295"],chatlogs:["Chatlog_CC0","Chatlog_DS0","Chatlog_HI0","Chatlog_GW0","Chatlog_GW2","Chatlog_GW1","Chatlog_SI2","Chatlog_SI5","Chatlog_SI3","Chatlog_SI4","Chatlog_SI0","Chatlog_SI1","Chatlog_SH0","Chatlog_SB0","Chatlog_LM0","Chatlog_LM1","Chatlog_DM1","Chatlog_DM0"]},$=[{name:"BingoChallenge",params:[{type:"string",offset:0,size:0,formatter:""}],desc:"{0}><"},{name:"BingoAchievementChallenge",params:[{type:"number",offset:0,size:1,formatter:"passage"}],desc:"System.String|{0}|Passage|0|passage><0><0"},{name:"BingoAllRegionsExcept",params:[{type:"number",offset:0,size:1,formatter:"regionsreal"},{type:"number",offset:1,size:1,formatter:""},{type:"string",offset:2,size:0,formatter:"regionsreal",joiner:"|"}],desc:"System.String|{0}|Region|0|regionsreal><{2}><0><System.Int32|{1}|Amount|1|NULL><0><0"},{name:"BingoBombTollChallenge",params:[{type:"number",offset:0,size:1,formatter:"tolls"},{type:"bool",offset:0,bit:4,formatter:"boolean"}],desc:"System.String|{0}|Scavenger Toll|1|tolls><System.Boolean|{1}|Pass the Toll|0|NULL><0><0"},{name:"BingoCollectPearlChallenge",params:[{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"number",offset:0,size:1,formatter:"pearls"},{type:"number",offset:1,size:2,formatter:""}],desc:"System.Boolean|{0}|Specific Pearl|0|NULL><System.String|{1}|Pearl|1|pearls><0><System.Int32|{2}|Amount|3|NULL><0><0><"},{name:"BingoCraftChallenge",params:[{type:"number",offset:0,size:1,formatter:"craft"},{type:"number",offset:1,size:2,formatter:""}],desc:"System.String|{0}|Item to Craft|0|craft><System.Int32|{1}|Amount|1|NULL><0><0><0"},{name:"BingoCreatureGateChallenge",params:[{type:"number",offset:0,size:1,formatter:"transport"},{type:"number",offset:1,size:1,formatter:""}],desc:"System.String|{0}|Creature Type|1|transport><0><System.Int32|{1}|Amount|0|NULL><empty><0><0"},{name:"BingoCycleScoreChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"System.Int32|{0}|Target Score|0|NULL><0><0"},{name:"BingoDamageChallenge",params:[{type:"number",offset:0,size:1,formatter:"weapons"},{type:"number",offset:1,size:1,formatter:"creatures"},{type:"number",offset:2,size:2,formatter:""}],desc:"System.String|{0}|Weapon|0|weapons><System.String|{1}|Creature Type|1|creatures><0><System.Int32|{2}|Amount|2|NULL><0><0"},{name:"BingoDepthsChallenge",params:[{type:"number",offset:0,size:1,formatter:"depths"}],desc:"System.String|{0}|Creature Type|0|depths><0><0"},{name:"BingoDodgeLeviathanChallenge",params:[],desc:"0><0"},{name:"BingoDontUseItemChallenge",params:[{type:"number",offset:0,size:1,formatter:"banitem"},{type:"bool",offset:0,bit:4,formatter:""},{type:"bool",offset:0,bit:5,formatter:""}],desc:"System.String|{0}|Item type|0|banitem><{1}><0><0><{2}"},{name:"BingoEatChallenge",params:[{type:"number",offset:0,size:2,formatter:""},{type:"bool",offset:0,bit:4,formatter:""},{type:"number",offset:2,size:1,formatter:"food"}],desc:"System.Int32|{0}|Amount|1|NULL><0><{1}><System.String|{2}|Food type|0|food><0><0"},{name:"BingoEchoChallenge",params:[{type:"number",offset:0,size:1,formatter:"echoes"},{type:"bool",offset:0,bit:4,formatter:"boolean"}],desc:"System.String|{0}|Region|0|echoes><System.Boolean|{1}|While Starving|1|NULL><0><0"},{name:"BingoEnterRegionChallenge",params:[{type:"number",offset:0,size:1,formatter:"regionsreal"}],desc:"System.String|{0}|Region|0|regionsreal><0><0"},{name:"BingoGlobalScoreChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Target Score|0|NULL><0><0"},{name:"BingoGreenNeuronChallenge",params:[{type:"bool",offset:0,bit:4,formatter:"boolean"}],desc:"System.Boolean|{0}|Looks to the Moon|0|NULL><0><0"},{name:"BingoHatchNoodleChallenge",params:[{type:"number",offset:0,size:1,formatter:""},{type:"bool",offset:0,bit:4,formatter:"boolean"}],desc:"0><System.Int32|{0}|Amount|1|NULL><System.Boolean|{1}|At Once|0|NULL><0><0"},{name:"BingoHellChallenge",params:[{type:"number",offset:0,size:1,formatter:""}],desc:"0><System.Int32|{0}|Amount|0|NULL><0><0"},{name:"BingoItemHoardChallenge",params:[{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"number",offset:0,size:1,formatter:""},{type:"number",offset:1,size:1,formatter:"expobject"}],desc:"System.Boolean|{0}|Any Shelter|2|NULL><0><System.Int32|{1}|Amount|0|NULL><System.String|{2}|Item|1|expobject><0><0><"},{name:"BingoKarmaFlowerChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Amount|0|NULL><0><0"},{name:"BingoKillChallenge",params:[{type:"number",offset:0,size:1,formatter:"creatures"},{type:"number",offset:1,size:1,formatter:"weaponsnojelly"},{type:"number",offset:2,size:2,formatter:""},{type:"number",offset:4,size:1,formatter:"regions"},{type:"number",offset:5,size:1,formatter:"subregions"},{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"bool",offset:0,bit:5,formatter:"boolean"},{type:"bool",offset:0,bit:6,formatter:"boolean"}],desc:"System.String|{0}|Creature Type|0|creatures><System.String|{1}|Weapon Used|6|weaponsnojelly><System.Int32|{2}|Amount|1|NULL><0><System.String|{3}|Region|5|regions><System.String|{4}|Subregion|4|subregions><System.Boolean|{5}|In one Cycle|3|NULL><System.Boolean|{6}|Via a Death Pit|7|NULL><System.Boolean|{7}|While Starving|2|NULL><0><0"},{name:"BingoMaulTypesChallenge",params:[{type:"number",offset:0,size:1,formatter:""}],desc:"0><System.Int32|{0}|Amount|0|NULL><0><0><"},{name:"BingoMaulXChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Amount|0|NULL><0><0"},{name:"BingoNeuronDeliveryChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"System.Int32|{0}|Amount of Neurons|0|NULL><0><0><0"},{name:"BingoNoNeedleTradingChallenge",params:[],desc:"0><0"},{name:"BingoNoRegionChallenge",params:[{type:"number",offset:0,size:1,formatter:"regionsreal"}],desc:"System.String|{0}|Region|0|regionsreal><0><0"},{name:"BingoPearlDeliveryChallenge",params:[{type:"number",offset:0,size:1,formatter:"regions"}],desc:"System.String|{0}|Pearl from Region|0|regions><0><0"},{name:"BingoPearlHoardChallenge",params:[{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"number",offset:0,size:2,formatter:""},{type:"number",offset:2,size:1,formatter:"regions"}],desc:"System.Boolean|{0}|Common Pearls|0|NULL><System.Int32|{1}|Amount|1|NULL><System.String|{2}|In Region|2|regions><0><0"},{name:"BingoPinChallenge",params:[{type:"number",offset:0,size:2,formatter:""},{type:"number",offset:2,size:1,formatter:"creatures"},{type:"number",offset:3,size:1,formatter:"regions"}],desc:"0><System.Int32|{0}|Amount|0|NULL><System.String|{1}|Creature Type|1|creatures><><System.String|{2}|Region|2|regions><0><0"},{name:"BingoPopcornChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Amount|0|NULL><0><0"},{name:"BingoRivCellChallenge",params:[],desc:"0><0"},{name:"BingoSaintDeliveryChallenge",params:[],desc:"0><0"},{name:"BingoSaintPopcornChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Amount|0|NULL><0><0"},{name:"BingoStealChallenge",params:[{type:"number",offset:0,size:1,formatter:"theft"},{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"number",offset:1,size:2,formatter:""}],desc:"System.String|{0}|Item|1|theft><System.Boolean|{1}|From Scavenger Toll|0|NULL><0><System.Int32|{2}|Amount|2|NULL><0><0"},{name:"BingoTameChallenge",params:[{type:"number",offset:0,size:1,formatter:"friend"}],desc:"System.String|{0}|Creature Type|0|friend><0><0"},{name:"BingoTradeChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Value|0|NULL><0><0"},{name:"BingoTradeTradedChallenge",params:[{type:"number",offset:0,size:2,formatter:""}],desc:"0><System.Int32|{0}|Amount of Items|0|NULL><empty><0><0"},{name:"BingoTransportChallenge",params:[{type:"number",offset:0,size:1,formatter:"regions"},{type:"number",offset:1,size:1,formatter:"regions"},{type:"number",offset:2,size:1,formatter:"transport"}],desc:"System.String|{0}|From Region|0|regions><System.String|{1}|To Region|1|regions><System.String|{2}|Creature Type|2|transport><><0><0"},{name:"BingoUnlockChallenge",params:[{type:"number",offset:0,size:2,formatter:"unlocks"}],desc:"System.String|{0}|Unlock|0|unlocks><0><0"},{name:"BingoVistaChallenge",params:[{type:"number",offset:0,size:1,formatter:"regions"},{type:"string",offset:5,size:0,formatter:"",joiner:""},{type:"number",offset:1,size:2,formatter:""},{type:"number",offset:3,size:2,formatter:""}],desc:"{0}><System.String|{1}|Room|0|vista><{2}><{3}><0><0"},{name:"BingoVistaChallenge",params:[{type:"number",offset:0,size:1,formatter:"vista_code"}],desc:"{0}><0><0"},{name:"BingoEnterRegionFromChallenge",params:[{type:"number",offset:0,size:1,formatter:"regionsreal"},{type:"number",offset:1,size:1,formatter:"regionsreal"}],desc:"System.String|{0}|From|0|regionsreal><System.String|{1}|To|0|regionsreal><0><0"},{name:"BingoMoonCloakChallenge",params:[{type:"bool",offset:0,bit:4,formatter:"boolean"}],desc:"System.Boolean|{0}|Deliver|0|NULL><0><0"},{name:"BingoBroadcastChallenge",params:[{type:"number",offset:0,size:1,formatter:"chatlogs"}],desc:"System.String|{0}|Broadcast|0|chatlogs><0><0"},{name:"BingoDamageExChallenge",params:[{type:"number",offset:0,size:1,formatter:"weapons"},{type:"number",offset:1,size:1,formatter:"creatures"},{type:"number",offset:2,size:2,formatter:""},{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"number",offset:4,size:1,formatter:"regions"},{type:"number",offset:5,size:1,formatter:"subregions"}],desc:"System.String|{0}|Weapon|0|weapons><System.String|{1}|Creature Type|1|creatures><0><System.Int32|{2}|Amount|2|NULL><System.Boolean|{3}|In One Cycle|0|NULL><System.String|{4}|Region|5|regions><System.String|{5}|Subregion|4|subregions><0><0"},{name:"BingoTameExChallenge",params:[{type:"bool",offset:0,bit:4,formatter:"boolean"},{type:"number",offset:0,size:1,formatter:"friend"},{type:"number",offset:1,size:1,formatter:""}],desc:"System.Boolean|{0}|Specific Creature Type|0|NULL><System.String|{1}|Creature Type|0|friend><0><System.Int32|{2}|Amount|3|NULL><0><0><"}];function enumToValue(e,t){return Y[t].indexOf(e)+1}function challengeValue(e){return $.findIndex((t=>t.name===e))}function applyBool(e,t,r,o){e[t]&=~(1<<r),o!==Y.boolean[0]&&(e[t]|=1<<r)}function applyShort(e,t,r){e[t]=r>>>0&255,e[t+1]=r>>>8&255}function applyLong(e,t,r){e[t+0]=r>>>0&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24&255}function readShort(e,t){return(e[t]<<0)+(e[t+1]<<8)}function readLong(e,t){return(e[t]<<0)+(e[t+1]<<8)+(e[t+2]<<16)+e[t+3]*(1<<24)}function checkSettingbox(e,t,r,o){var n=t.split("|");if(n.length!=r.length)throw new TypeError(e+": "+o+", found "+String(n.length)+" items, expected: "+String(r.length));for(var a=0;a<n.length;a++)if(void 0!==r[a]&&n[a]!=r[a])throw new TypeError(e+": "+o+', found "'+n[a]+'", expected: "'+String(r[a])+'"');return n}function checkDescriptors(e,t,r,o){var n=String(t),a=String(r);if("string"==typeof t&&(n='"'+n+'"'),"string"==typeof r&&(a='"'+a+'"'),t!=r)throw new TypeError(e+": error, "+o+" "+n+", expected: "+a)}function getMapLink(e){var t=regionOfRoom(e),r=Object.keys(K)[Object.values(K).indexOf(s.character)]||"White";return r=r.toLowerCase(),'<br><a href="'+g+"?slugcat="+r+"&region="+t+"&room="+e+'" target="_blank">'+e+" on Rain World Downpour Map</a>"}function regionOfRoom(e){return e.substring(0,e.search("_"))}ChallengeUpgrades={BingoDamageExChallenge:"BingoDamageChallenge",BingoTameExChallenge:"BingoTameChallenge"};Object.keys(u).indexOf("BingoChallenge"),Object.keys(u).indexOf("BingoVistaChallenge");function itemToColor(e){return colorFloatToString(O[e]||O.Default)}function creatureToColor(e){return colorFloatToString(I[e]||I.Default)}function colorFloatToString(e){var t=e[0],r=e[1],o=e[2];return"#"+("00000"+((toInt(t)<<16)+(toInt(r)<<8)+toInt(o)).toString(16)).slice(-6);function toInt(e){return Math.min(255,Math.max(0,Math.floor(256*e)))}}function creatureNameQuantify(e,t){return 1!=e?String(e)+" "+t:(t=t.replace(/Mice$/,"Mouse").replace(/ies$/,"y").replace(/ches$/,"ch").replace(/s$/,""),t=/^[AEIOU]/i.test(t)?"an "+t:"a "+t)}